[2022-04-30 05:32:24,543] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: ArrayBuffer(1, 2, 0) for TopicPartitions: ArrayBuffer(kafka-connect-infra-offset-5, __consumer_offsets-30, __consumer_offsets-8, kafka-connect-infra-offset-24, __consumer_offsets-21, kafka-connect-infra-status-0, __consumer_offsets-27, __consumer_offsets-9, kafka-connect-infra-status-4, kafka-connect-infra-offset-2, __consumer_offsets-33, kafka-connect-infra-offset-11, kafka-connect-infra-offset-20, kafka-connect-infra-offset-8, __consumer_offsets-36, __consumer_offsets-42, egov-infra-logs-2, __consumer_offsets-3, __consumer_offsets-18, __consumer_offsets-15, __consumer_offsets-24, kafka-connect-infra-offset-17, kafka-connect-infra-offset-6, kafka-connect-infra-offset-23, kafka-connect-infra-offset-0, __consumer_offsets-38, kafka-connect-infra-offset-12, __consumer_offsets-48, kafka-connect-infra-status-3, kafka-connect-infra-config-0, egov-services-logs-2, __consumer_offsets-2, __consumer_offsets-6, __consumer_offsets-14, res-custom-filter-0, kafka-connect-infra-offset-18, kafka-connect-infra-offset-14, __consumer_offsets-20, __consumer_offsets-44, __consumer_offsets-39, __consumer_offsets-12, __consumer_offsets-26, __consumer_offsets-32) (kafka.controller.KafkaController)
[2022-04-30 05:32:24,543] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2022-04-30 05:32:24,543] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=39, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2022-04-30 05:32:24,543] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2022-04-30 05:32:24,543] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-20 (state.change.logger)
[2022-04-30 05:32:24,543] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=20, isr=[1, 0], zkVersion=39, replicas=[0, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition egov-services-logs-2 (state.change.logger)
[2022-04-30 05:32:24,543] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-14 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=20, isr=[1, 0], zkVersion=41, replicas=[0, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition egov-infra-logs-2 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-17 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-6 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-0 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-11 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=18, isr=[1, 0], zkVersion=29, replicas=[1, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition res-custom-filter-0 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[1, 2, 0], zkVersion=39, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-status-0 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-8 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-status-3 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-5 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-24 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-2 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-18 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[1, 2, 0], zkVersion=39, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-config-0 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[1, 2, 0], zkVersion=39, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-status-4 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-12 (state.change.logger)
[2022-04-30 05:32:24,544] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-23 (state.change.logger)
[2022-04-30 05:32:24,545] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,546] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,546] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=18, isr=[1, 0], zkVersion=29, replicas=[1, 0], offlineReplicas=[]) for partition res-custom-filter-0 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,546] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 2, 0], offlineReplicas=[]) for partition kafka-connect-infra-offset-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,546] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-status-4 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,546] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,546] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-0 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-6 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[1, 2, 0], zkVersion=39, replicas=[1, 0, 2], offlineReplicas=[]) for partition kafka-connect-infra-status-0 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition kafka-connect-infra-offset-8 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 2, 0], offlineReplicas=[]) for partition kafka-connect-infra-offset-14 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-12 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-18 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition kafka-connect-infra-offset-20 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-24 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition kafka-connect-infra-status-3 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=20, isr=[1, 0], zkVersion=41, replicas=[0, 1], offlineReplicas=[]) for partition egov-infra-logs-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 0, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-5 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-11 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) for partition kafka-connect-infra-config-0 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=39, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 0, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-17 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=20, isr=[1, 0], zkVersion=39, replicas=[0, 1], offlineReplicas=[]) for partition egov-services-logs-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=37, replicas=[1, 0, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-23 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[1, 2, 0], zkVersion=39, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[2, 1, 0], zkVersion=35, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=19, isr=[1, 2, 0], zkVersion=39, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,547] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=1, leaderEpoch=21, isr=[1, 2, 0], zkVersion=38, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 26 (state.change.logger)
[2022-04-30 05:32:24,548] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 19 sent to broker kafka-v2-infra-2.kafka-v2-infra-headless.kafka-cluster:9092 (id: 2 rack: null) (state.change.logger)
[2022-04-30 05:32:24,548] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 7 sent to broker kafka-v2-infra-0.kafka-v2-infra-headless.kafka-cluster:9092 (id: 0 rack: null) (state.change.logger)
[2022-04-30 05:32:24,548] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 26 sent to broker kafka-v2-infra-1.kafka-v2-infra-headless.kafka-cluster:9092 (id: 1 rack: null) (state.change.logger)
[2022-04-30 05:32:25,212] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: ArrayBuffer(1, 2, 0) for TopicPartitions: ArrayBuffer(kafka-connect-infra-offset-7, __consumer_offsets-7, res-custom-filter-2, __consumer_offsets-46, egov-infra-logs-1, __consumer_offsets-35, __consumer_offsets-41, kafka-connect-infra-offset-15, __consumer_offsets-23, __consumer_offsets-47, __consumer_offsets-16, kafka-connect-infra-status-1, kafka-connect-infra-offset-21, __consumer_offsets-17, kafka-connect-infra-offset-16, kafka-connect-infra-offset-3, __consumer_offsets-19, __consumer_offsets-11, kafka-connect-infra-offset-9, __consumer_offsets-1, __consumer_offsets-5, __consumer_offsets-29, __consumer_offsets-34, kafka-connect-infra-offset-10) (kafka.controller.KafkaController)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-9 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 0, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=42, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-status-1 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-3 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 0, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=14, isr=[2, 0], zkVersion=40, replicas=[2, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition egov-infra-logs-1 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=15, isr=[2, 0], zkVersion=23, replicas=[0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition res-custom-filter-2 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2022-04-30 05:32:25,213] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-16 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-21 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 0, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 0, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-7 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-10 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-15 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2022-04-30 05:32:25,214] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2022-04-30 05:32:25,215] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-3 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 0, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-7 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=42, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-status-1 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) for partition kafka-connect-infra-offset-10 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=15, isr=[2, 0], zkVersion=23, replicas=[0, 2], offlineReplicas=[]) for partition res-custom-filter-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-9 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-15 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) for partition kafka-connect-infra-offset-16 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-21 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=14, isr=[2, 0], zkVersion=40, replicas=[2, 0], offlineReplicas=[]) for partition egov-infra-logs-1 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=20, isr=[1, 2, 0], zkVersion=40, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,216] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=2, leaderEpoch=17, isr=[1, 2, 0], zkVersion=30, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 27 (state.change.logger)
[2022-04-30 05:32:25,217] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 27 sent to broker kafka-v2-infra-1.kafka-v2-infra-headless.kafka-cluster:9092 (id: 1 rack: null) (state.change.logger)
[2022-04-30 05:32:25,217] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 20 sent to broker kafka-v2-infra-2.kafka-v2-infra-headless.kafka-cluster:9092 (id: 2 rack: null) (state.change.logger)
[2022-04-30 05:32:25,217] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 8 sent to broker kafka-v2-infra-0.kafka-v2-infra-headless.kafka-cluster:9092 (id: 0 rack: null) (state.change.logger)
[2022-04-30 05:34:52,880] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 05:34:52,882] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 05:34:52,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 05:34:52,882] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:34:52,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 05:34:52,882] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:34:52,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2)) (kafka.controller.KafkaController)
[2022-04-30 05:34:52,882] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.967741935483871 (kafka.controller.KafkaController)
[2022-04-30 05:34:52,883] INFO [Controller id=1] Starting preferred replica leader election for partitions __consumer_offsets-8,kafka-connect-infra-offset-24,res-custom-filter-2,kafka-connect-infra-status-4,__consumer_offsets-35,__consumer_offsets-41,kafka-connect-infra-offset-15,__consumer_offsets-23,__consumer_offsets-47,kafka-connect-infra-status-1,egov-infra-logs-2,kafka-connect-infra-offset-21,kafka-connect-infra-offset-6,kafka-connect-infra-offset-0,__consumer_offsets-38,__consumer_offsets-17,kafka-connect-infra-offset-12,kafka-connect-infra-offset-3,__consumer_offsets-11,egov-services-logs-2,kafka-connect-infra-offset-9,__consumer_offsets-2,__consumer_offsets-14,kafka-connect-infra-offset-18,__consumer_offsets-20,__consumer_offsets-44,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-32 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,101] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-8 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-24 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition res-custom-filter-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=16, isr=List(2, 0), zkVersion=24) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-status-4 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-35 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-41 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-15 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-23 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-47 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-status-1 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=43) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition egov-infra-logs-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 0), zkVersion=42) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-21 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-6 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-38 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-17 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-12 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-3 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-11 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition egov-services-logs-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 0), zkVersion=40) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-9 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-14 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition kafka-connect-infra-offset-18 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-20 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-44 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-5 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-26 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-29 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=21, isr=List(1, 2, 0), zkVersion=41) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Changed partition __consumer_offsets-32 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=22, isr=List(1, 2, 0), zkVersion=39) (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=43, replicas=0,2,1, isNew=false) to broker 2 for partition kafka-connect-infra-status-1 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition kafka-connect-infra-offset-9 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition kafka-connect-infra-offset-6 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition kafka-connect-infra-offset-0 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition kafka-connect-infra-offset-3 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=16, isr=2,0, zkVersion=24, replicas=0,2, isNew=false) to broker 2 for partition res-custom-filter-2 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition kafka-connect-infra-offset-21 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition kafka-connect-infra-offset-24 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition kafka-connect-infra-offset-18 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition kafka-connect-infra-offset-15 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition kafka-connect-infra-status-4 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 2 for partition kafka-connect-infra-offset-12 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=43, replicas=0,2,1, isNew=false) to broker 1 for partition kafka-connect-infra-status-1 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition kafka-connect-infra-offset-9 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,0, zkVersion=40, replicas=0,1, isNew=false) to broker 1 for partition egov-services-logs-2 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,0, zkVersion=42, replicas=0,1, isNew=false) to broker 1 for partition egov-infra-logs-2 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition kafka-connect-infra-offset-6 (state.change.logger)
[2022-04-30 05:34:53,102] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition kafka-connect-infra-offset-0 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition kafka-connect-infra-offset-3 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition kafka-connect-infra-offset-21 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition kafka-connect-infra-offset-24 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition kafka-connect-infra-offset-18 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition kafka-connect-infra-offset-15 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition kafka-connect-infra-status-4 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 1 for partition kafka-connect-infra-offset-12 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition __consumer_offsets-38 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=43, replicas=0,2,1, isNew=false) to broker 0 for partition kafka-connect-infra-status-1 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition __consumer_offsets-8 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition kafka-connect-infra-offset-9 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,0, zkVersion=40, replicas=0,1, isNew=false) to broker 0 for partition egov-services-logs-2 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition __consumer_offsets-2 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition __consumer_offsets-35 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,0, zkVersion=42, replicas=0,1, isNew=false) to broker 0 for partition egov-infra-logs-2 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition __consumer_offsets-5 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition kafka-connect-infra-offset-6 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition __consumer_offsets-32 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition kafka-connect-infra-offset-0 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition kafka-connect-infra-offset-3 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition __consumer_offsets-29 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=16, isr=2,0, zkVersion=24, replicas=0,2, isNew=false) to broker 0 for partition res-custom-filter-2 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition __consumer_offsets-23 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition __consumer_offsets-26 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition __consumer_offsets-20 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition kafka-connect-infra-offset-21 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition kafka-connect-infra-offset-24 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition kafka-connect-infra-offset-18 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition __consumer_offsets-17 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition __consumer_offsets-44 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition __consumer_offsets-47 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition kafka-connect-infra-offset-15 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition __consumer_offsets-14 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition __consumer_offsets-41 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) to broker 0 for partition __consumer_offsets-11 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition kafka-connect-infra-status-4 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) to broker 0 for partition kafka-connect-infra-offset-12 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-9 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=43, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-status-1 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 0], zkVersion=40, replicas=[0, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition egov-services-logs-2 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 0], zkVersion=42, replicas=[0, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition egov-infra-logs-2 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-6 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-0 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-3 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=16, isr=[2, 0], zkVersion=24, replicas=[0, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition res-custom-filter-2 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-21 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-24 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-18 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-15 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-status-4 (state.change.logger)
[2022-04-30 05:34:53,103] TRACE [Controller id=1 epoch=17] Sending UpdateMetadata request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) to brokers Set(0, 1, 2) for partition kafka-connect-infra-offset-12 (state.change.logger)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-8 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-24 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition res-custom-filter-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-status-4 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-35 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-41 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-15 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-23 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-47 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-status-1 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition egov-infra-logs-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-21 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-6 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-38 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-17 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-12 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-3 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-11 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition egov-services-logs-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-9 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-14 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition kafka-connect-infra-offset-18 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-20 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-44 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-5 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-26 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-29 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] INFO [Controller id=1] Partition __consumer_offsets-32 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2022-04-30 05:34:53,104] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-11 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-status-4 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-44 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-23 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-6 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-17 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-32 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-12 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-18 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-26 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-5 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-38 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-24 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-47 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-14 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-3 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,0, zkVersion=42, replicas=0,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition egov-infra-logs-2 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-41 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=43, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-status-1 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-20 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-9 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-15 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-29 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,0, zkVersion=40, replicas=0,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition egov-services-logs-2 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-8 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition kafka-connect-infra-offset-21 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=1,2,0, zkVersion=41, replicas=0,2,1, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-35 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=1,2,0, zkVersion=39, replicas=0,1,2, isNew=false) correlation id 28 from controller 1 epoch 17 for partition __consumer_offsets-2 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-29 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-15 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-12 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-26 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-23 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-9 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-20 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-6 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-3 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-14 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-0 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-11 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition egov-services-logs-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-8 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-5 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition egov-infra-logs-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,105] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-status-4 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-47 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-status-1 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-24 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-38 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-35 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-21 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-44 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-41 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition __consumer_offsets-32 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,106] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 28 from controller 1 epoch 17 starting the become-follower transition for partition kafka-connect-infra-offset-18 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(kafka-connect-infra-offset-15, __consumer_offsets-32, kafka-connect-infra-status-4, __consumer_offsets-14, kafka-connect-infra-offset-9, __consumer_offsets-41, __consumer_offsets-26, __consumer_offsets-23, __consumer_offsets-8, kafka-connect-infra-offset-18, kafka-connect-infra-offset-3, kafka-connect-infra-offset-0, __consumer_offsets-35, __consumer_offsets-17, kafka-connect-infra-offset-12, __consumer_offsets-47, __consumer_offsets-44, __consumer_offsets-29, kafka-connect-infra-status-1, __consumer_offsets-11, kafka-connect-infra-offset-24, kafka-connect-infra-offset-21, kafka-connect-infra-offset-6, egov-infra-logs-2, __consumer_offsets-38, __consumer_offsets-20, __consumer_offsets-5, __consumer_offsets-2, egov-services-logs-2) (kafka.server.ReplicaFetcherManager)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-18 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-21 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-24 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-41 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-44 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-47 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition egov-infra-logs-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-5 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-8 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,107] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-11 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-14 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-20 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-23 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-26 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-29 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-32 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-35 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-38 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-status-1 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-status-4 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition egov-services-logs-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-0 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-3 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-6 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-9 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-12 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,108] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-15 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-18 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-21 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-24 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-41 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-44 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-47 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition egov-infra-logs-2 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-2 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-5 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-8 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-11 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-14 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,109] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-17 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-20 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-23 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-26 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-29 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-32 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-35 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition __consumer_offsets-38 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-status-1 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-status-4 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition egov-services-logs-2 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-0 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-3 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-6 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-9 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-12 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,110] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition kafka-connect-infra-offset-15 as part of become-follower request with correlation id 28 from controller 1 epoch 17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker BrokerEndPoint(id=0, host=kafka-v2-infra-0.kafka-v2-infra-headless.kafka-cluster:9092) for partitions Map(__consumer_offsets-8 -> (offset=0, leaderEpoch=22), kafka-connect-infra-offset-24 -> (offset=0, leaderEpoch=22), kafka-connect-infra-status-4 -> (offset=0, leaderEpoch=22), __consumer_offsets-35 -> (offset=0, leaderEpoch=21), __consumer_offsets-41 -> (offset=0, leaderEpoch=21), kafka-connect-infra-offset-15 -> (offset=0, leaderEpoch=21), __consumer_offsets-23 -> (offset=0, leaderEpoch=21), __consumer_offsets-47 -> (offset=0, leaderEpoch=21), kafka-connect-infra-status-1 -> (offset=17, leaderEpoch=21), egov-infra-logs-2 -> (offset=43707419, leaderEpoch=21), kafka-connect-infra-offset-21 -> (offset=0, leaderEpoch=21), kafka-connect-infra-offset-6 -> (offset=0, leaderEpoch=22), kafka-connect-infra-offset-0 -> (offset=0, leaderEpoch=22), __consumer_offsets-38 -> (offset=0, leaderEpoch=22), __consumer_offsets-17 -> (offset=0, leaderEpoch=21), kafka-connect-infra-offset-12 -> (offset=0, leaderEpoch=22), kafka-connect-infra-offset-3 -> (offset=0, leaderEpoch=21), __consumer_offsets-11 -> (offset=0, leaderEpoch=21), egov-services-logs-2 -> (offset=43136981, leaderEpoch=21), kafka-connect-infra-offset-9 -> (offset=0, leaderEpoch=21), __consumer_offsets-2 -> (offset=0, leaderEpoch=22), __consumer_offsets-14 -> (offset=0, leaderEpoch=22), kafka-connect-infra-offset-18 -> (offset=0, leaderEpoch=22), __consumer_offsets-20 -> (offset=0, leaderEpoch=22), __consumer_offsets-44 -> (offset=0, leaderEpoch=22), __consumer_offsets-5 -> (offset=0, leaderEpoch=21), __consumer_offsets-26 -> (offset=0, leaderEpoch=22), __consumer_offsets-29 -> (offset=0, leaderEpoch=21), __consumer_offsets-32 -> (offset=0, leaderEpoch=22)) (kafka.server.ReplicaFetcherManager)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-18 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-21 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-24 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-41 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-44 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-47 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition egov-infra-logs-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-5 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-8 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-11 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-14 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-20 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-23 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-26 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-29 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-32 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-35 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition __consumer_offsets-38 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,111] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-status-1 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,112] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,112] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-status-4 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition egov-services-logs-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-0 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-3 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-6 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-9 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-12 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 17 with correlation id 28 for partition kafka-connect-infra-offset-15 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-29 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-15 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-12 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-26 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-23 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-9 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-20 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-6 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-17 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-3 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-14 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-0 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-11 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition egov-services-logs-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-8 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-5 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition egov-infra-logs-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-2 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-status-4 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-47 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-status-1 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-24 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-38 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-35 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-21 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-44 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-41 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition __consumer_offsets-32 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 28 from controller 1 epoch 17 for the become-follower transition for partition kafka-connect-infra-offset-18 with leader 0 (state.change.logger)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-44 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-8 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-20 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-32 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-41. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-44. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-47. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-2. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-5. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-8. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-11. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-14. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,113] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-17. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,114] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-20. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,114] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-23. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,114] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-26. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,114] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-29. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,114] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-32. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,114] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-35. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,114] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-38. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:34:53,114] TRACE [Controller id=1 epoch=17] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=kafka-connect-infra-status,partition=4,error_code=0},{topic=kafka-connect-infra-offset,partition=0,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=kafka-connect-infra-offset,partition=6,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=kafka-connect-infra-offset,partition=12,error_code=0},{topic=kafka-connect-infra-offset,partition=18,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=kafka-connect-infra-offset,partition=24,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=kafka-connect-infra-offset,partition=3,error_code=0},{topic=egov-infra-logs,partition=2,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=kafka-connect-infra-status,partition=1,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=kafka-connect-infra-offset,partition=9,error_code=0},{topic=kafka-connect-infra-offset,partition=15,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=egov-services-logs,partition=2,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=kafka-connect-infra-offset,partition=21,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0}]} for request LEADER_AND_ISR with correlation id 28 sent to broker kafka-v2-infra-1.kafka-v2-infra-headless.kafka-cluster:9092 (id: 1 rack: null) (state.change.logger)
[2022-04-30 05:34:53,115] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,115] TRACE [Controller id=1 epoch=17] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=kafka-connect-infra-status,partition=4,error_code=0},{topic=kafka-connect-infra-offset,partition=0,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=kafka-connect-infra-offset,partition=6,error_code=0},{topic=res-custom-filter,partition=2,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=kafka-connect-infra-offset,partition=12,error_code=0},{topic=kafka-connect-infra-offset,partition=18,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=kafka-connect-infra-offset,partition=24,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=kafka-connect-infra-offset,partition=3,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=kafka-connect-infra-status,partition=1,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=kafka-connect-infra-offset,partition=9,error_code=0},{topic=kafka-connect-infra-offset,partition=15,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=kafka-connect-infra-offset,partition=21,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0}]} for request LEADER_AND_ISR with correlation id 21 sent to broker kafka-v2-infra-2.kafka-v2-infra-headless.kafka-cluster:9092 (id: 2 rack: null) (state.change.logger)
[2022-04-30 05:34:53,115] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-status-4 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-0 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-6 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=16, isr=[2, 0], zkVersion=24, replicas=[0, 2], offlineReplicas=[]) for partition res-custom-filter-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-12 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-18 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition kafka-connect-infra-offset-24 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-3 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 0], zkVersion=42, replicas=[0, 1], offlineReplicas=[]) for partition egov-infra-logs-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=43, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-status-1 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-9 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-15 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,116] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 0], zkVersion=40, replicas=[0, 1], offlineReplicas=[]) for partition egov-services-logs-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,117] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,117] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition kafka-connect-infra-offset-21 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,117] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=21, isr=[1, 2, 0], zkVersion=41, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,117] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=17, leader=0, leaderEpoch=22, isr=[1, 2, 0], zkVersion=39, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 17 with correlation id 29 (state.change.logger)
[2022-04-30 05:34:53,117] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 29 sent to broker kafka-v2-infra-1.kafka-v2-infra-headless.kafka-cluster:9092 (id: 1 rack: null) (state.change.logger)
[2022-04-30 05:34:53,118] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 22 sent to broker kafka-v2-infra-2.kafka-v2-infra-headless.kafka-cluster:9092 (id: 2 rack: null) (state.change.logger)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-11 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-status-4 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-44 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-offset-0 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-23 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-offset-6 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-17 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-32 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-offset-12 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-offset-18 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-26 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-5 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-38 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-offset-24 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-47 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-14 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-offset-3 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition egov-infra-logs-2 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-41 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-status-1 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-20 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-offset-9 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [Log partition=kafka-connect-infra-offset-15, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:53,119] INFO [Log partition=__consumer_offsets-29, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition egov-services-logs-2 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-8 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition kafka-connect-infra-offset-21 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-35 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,119] INFO [ReplicaFetcher replicaId=1, leaderId=0, fetcherId=0] Retrying leaderEpoch request for partition __consumer_offsets-2 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2022-04-30 05:34:53,337] TRACE [Controller id=1 epoch=17] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=kafka-connect-infra-status,partition=4,error_code=0},{topic=kafka-connect-infra-offset,partition=0,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=kafka-connect-infra-offset,partition=6,error_code=0},{topic=res-custom-filter,partition=2,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=kafka-connect-infra-offset,partition=12,error_code=0},{topic=kafka-connect-infra-offset,partition=18,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=kafka-connect-infra-offset,partition=24,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=kafka-connect-infra-offset,partition=3,error_code=0},{topic=egov-infra-logs,partition=2,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=kafka-connect-infra-status,partition=1,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=kafka-connect-infra-offset,partition=9,error_code=0},{topic=kafka-connect-infra-offset,partition=15,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=egov-services-logs,partition=2,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=kafka-connect-infra-offset,partition=21,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0}]} for request LEADER_AND_ISR with correlation id 9 sent to broker kafka-v2-infra-0.kafka-v2-infra-headless.kafka-cluster:9092 (id: 0 rack: null) (state.change.logger)
[2022-04-30 05:34:53,414] TRACE [Controller id=1 epoch=17] Received response {error_code=0} for request UPDATE_METADATA with correlation id 10 sent to broker kafka-v2-infra-0.kafka-v2-infra-headless.kafka-cluster:9092 (id: 0 rack: null) (state.change.logger)
[2022-04-30 05:34:54,129] INFO [Log partition=__consumer_offsets-11, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-status-4, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-44, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-offset-0, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-23, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-offset-6, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-17, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-32, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-offset-12, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-offset-18, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-26, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-5, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-38, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-offset-24, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-47, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-14, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-offset-3, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=egov-infra-logs-2, dir=/opt/kafka-data/logs] Truncating to 43707419 has no effect as the largest offset in the log is 43707418 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-41, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-status-1, dir=/opt/kafka-data/logs] Truncating to 17 has no effect as the largest offset in the log is 16 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-20, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-offset-9, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=egov-services-logs-2, dir=/opt/kafka-data/logs] Truncating to 43136981 has no effect as the largest offset in the log is 43136980 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-8, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=kafka-connect-infra-offset-21, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-35, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:34:54,130] INFO [Log partition=__consumer_offsets-2, dir=/opt/kafka-data/logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2022-04-30 05:39:53,104] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 05:39:53,105] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 05:39:53,106] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 05:39:53,106] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:39:53,106] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 05:39:53,106] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:39:53,106] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 05:39:53,106] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:44:53,106] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 05:44:53,107] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 05:44:53,107] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 05:44:53,107] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:44:53,107] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 05:44:53,107] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:44:53,107] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 05:44:53,107] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:49:53,107] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 05:49:53,108] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 05:49:53,108] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 05:49:53,108] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:49:53,108] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 05:49:53,108] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:49:53,108] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 05:49:53,108] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 05:54:53,109] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 05:54:53,110] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 05:54:53,110] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 05:54:53,110] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:54:53,110] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 05:54:53,110] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:54:53,110] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 05:54:53,110] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:59:53,110] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 05:59:53,112] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 05:59:53,112] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 05:59:53,112] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:59:53,112] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 05:59:53,112] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 05:59:53,112] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 05:59:53,112] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 06:04:53,113] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:04:53,114] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:04:53,115] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:04:53,115] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:04:53,115] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:04:53,115] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:04:53,115] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:04:53,115] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:09:53,115] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:09:53,116] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:09:53,117] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:09:53,117] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:09:53,117] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:09:53,117] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:09:53,117] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:09:53,117] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 06:14:53,117] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:14:53,118] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:14:53,119] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:14:53,119] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:14:53,119] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:14:53,119] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:14:53,119] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:14:53,119] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:19:53,119] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:19:53,120] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:19:53,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:19:53,120] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:19:53,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:19:53,120] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:19:53,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:19:53,121] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 06:24:53,221] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:24:53,222] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:24:53,223] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:24:53,223] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:24:53,223] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:24:53,223] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:24:53,223] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:24:53,223] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:29:53,223] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:29:53,224] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:29:53,225] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:29:53,225] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:29:53,225] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:29:53,225] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:29:53,225] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:29:53,225] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 06:34:53,225] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:34:53,226] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:34:53,226] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:34:53,226] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:34:53,226] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:34:53,226] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:34:53,226] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:34:53,226] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:39:53,226] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:39:53,227] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:39:53,227] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:39:53,227] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:39:53,227] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:39:53,227] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:39:53,227] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:39:53,227] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 06:44:53,227] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:44:53,228] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:44:53,229] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:44:53,229] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:44:53,229] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:44:53,229] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:44:53,229] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:44:53,229] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:49:53,229] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:49:53,230] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:49:53,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:49:53,230] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:49:53,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:49:53,230] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:49:53,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:49:53,230] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 06:54:53,230] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:54:53,232] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:54:53,232] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:54:53,232] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:54:53,232] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:54:53,232] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:54:53,232] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:54:53,232] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:59:53,232] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 06:59:53,234] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 06:59:53,234] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 06:59:53,234] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:59:53,234] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 06:59:53,234] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 06:59:53,234] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 06:59:53,234] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 07:04:53,235] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:04:53,236] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:04:53,236] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:04:53,236] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:04:53,236] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:04:53,236] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:04:53,236] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:04:53,236] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:09:53,236] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:09:53,238] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:09:53,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:09:53,238] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:09:53,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:09:53,238] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:09:53,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:09:53,238] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 07:14:53,238] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:14:53,240] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:14:53,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:14:53,240] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:14:53,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:14:53,240] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:14:53,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:14:53,240] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:19:53,240] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:19:53,242] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:19:53,242] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:19:53,242] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:19:53,242] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:19:53,242] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:19:53,242] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:19:53,242] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 07:24:53,242] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:24:53,243] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:24:53,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:24:53,243] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:24:53,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:24:53,243] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:24:53,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:24:53,243] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:29:53,243] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:29:53,244] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:29:53,244] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:29:53,244] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:29:53,244] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:29:53,244] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:29:53,244] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:29:53,244] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 07:34:53,245] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:34:53,246] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:34:53,246] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:34:53,246] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:34:53,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:34:53,247] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:34:53,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:34:53,247] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:39:53,247] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:39:53,248] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:39:53,248] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:39:53,248] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:39:53,248] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:39:53,248] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:39:53,248] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:39:53,248] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 07:44:53,248] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:44:53,250] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:44:53,250] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:44:53,250] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:44:53,250] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:44:53,250] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:44:53,250] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:44:53,250] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:49:53,250] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:49:53,251] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:49:53,251] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:49:53,251] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:49:53,251] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:49:53,251] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:49:53,251] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:49:53,251] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 07:54:53,251] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:54:53,253] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:54:53,253] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:54:53,253] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:54:53,253] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:54:53,253] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:54:53,253] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:54:53,253] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:59:53,253] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 07:59:53,255] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 07:59:53,255] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 07:59:53,255] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:59:53,255] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 07:59:53,255] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 07:59:53,255] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 07:59:53,255] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 08:04:53,255] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:04:53,257] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:04:53,257] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:04:53,257] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:04:53,257] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:04:53,257] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:04:53,257] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:04:53,257] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:09:53,257] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:09:53,258] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:09:53,259] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:09:53,259] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:09:53,259] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:09:53,259] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:09:53,259] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:09:53,259] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 08:14:53,259] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:14:53,260] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:14:53,261] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:14:53,261] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:14:53,261] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:14:53,261] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:14:53,261] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:14:53,261] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:19:53,261] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:19:53,263] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:19:53,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:19:53,263] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:19:53,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:19:53,263] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:19:53,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:19:53,263] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 08:24:53,264] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:24:53,265] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:24:53,265] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:24:53,265] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:24:53,265] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:24:53,265] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:24:53,265] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:24:53,265] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:29:53,265] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:29:53,267] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:29:53,267] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:29:53,267] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:29:53,267] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:29:53,267] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:29:53,267] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:29:53,267] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 08:34:53,267] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:34:53,269] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:34:53,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:34:53,269] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:34:53,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:34:53,269] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:34:53,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:34:53,269] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:39:53,269] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:39:53,270] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:39:53,270] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:39:53,270] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:39:53,270] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:39:53,270] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:39:53,270] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:39:53,270] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 08:44:53,271] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:44:53,272] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:44:53,272] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:44:53,272] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:44:53,272] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:44:53,272] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:44:53,272] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:44:53,272] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:49:53,273] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:49:53,274] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:49:53,274] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:49:53,274] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:49:53,274] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:49:53,274] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:49:53,274] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:49:53,274] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 08:54:53,275] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:54:53,276] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:54:53,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:54:53,276] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:54:53,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:54:53,276] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:54:53,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:54:53,276] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:59:53,277] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 08:59:53,278] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 08:59:53,278] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 08:59:53,278] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:59:53,278] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 08:59:53,278] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 08:59:53,279] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 08:59:53,279] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 09:04:53,279] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:04:53,280] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:04:53,280] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:04:53,280] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:04:53,280] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:04:53,280] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:04:53,280] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:04:53,280] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:09:53,281] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:09:53,282] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:09:53,282] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:09:53,282] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:09:53,282] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:09:53,282] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:09:53,282] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:09:53,282] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 09:14:53,283] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:14:53,284] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:14:53,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:14:53,284] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:14:53,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:14:53,284] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:14:53,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:14:53,284] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:19:53,285] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:19:53,287] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:19:53,287] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:19:53,287] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:19:53,287] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:19:53,287] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:19:53,287] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:19:53,287] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 09:24:53,288] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:24:53,289] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:24:53,289] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:24:53,289] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:24:53,289] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:24:53,289] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:24:53,289] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:24:53,289] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:29:53,290] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:29:53,290] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:29:53,290] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:29:53,290] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:29:53,291] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:29:53,291] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:29:53,291] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:29:53,291] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 09:34:53,291] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:34:53,292] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:34:53,292] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:34:53,292] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:34:53,293] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:34:53,293] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:34:53,293] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:34:53,293] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:39:53,293] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:39:53,294] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:39:53,294] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:39:53,295] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:39:53,295] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:39:53,295] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:39:53,295] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:39:53,295] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 09:44:53,295] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:44:53,296] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:44:53,296] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:44:53,296] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:44:53,296] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:44:53,296] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:44:53,296] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:44:53,296] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:49:53,296] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:49:53,298] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:49:53,298] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:49:53,298] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:49:53,298] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:49:53,298] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:49:53,298] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:49:53,298] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 09:54:53,298] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:54:53,299] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:54:53,299] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:54:53,299] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:54:53,299] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:54:53,299] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:54:53,299] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:54:53,299] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:59:53,299] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 09:59:53,301] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 09:59:53,301] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 09:59:53,301] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:59:53,301] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 09:59:53,301] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 09:59:53,301] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 09:59:53,301] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 10:04:53,302] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:04:53,303] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:04:53,304] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:04:53,304] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:04:53,304] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:04:53,304] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:04:53,304] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:04:53,304] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:09:53,304] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:09:53,306] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:09:53,306] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:09:53,306] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:09:53,306] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:09:53,306] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:09:53,306] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:09:53,306] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 10:14:53,306] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:14:53,307] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:14:53,307] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:14:53,307] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:14:53,308] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:14:53,308] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:14:53,308] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:14:53,308] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:19:53,308] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:19:53,309] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:19:53,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:19:53,309] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:19:53,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:19:53,309] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:19:53,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:19:53,309] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 10:24:53,309] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:24:53,311] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:24:53,311] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:24:53,311] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:24:53,311] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:24:53,311] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:24:53,311] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:24:53,311] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:29:53,311] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:29:53,313] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:29:53,313] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:29:53,313] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:29:53,313] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:29:53,313] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:29:53,313] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:29:53,313] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 10:34:53,314] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:34:53,315] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:34:53,315] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:34:53,315] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:34:53,315] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:34:53,315] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:34:53,315] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:34:53,315] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:39:53,315] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:39:53,317] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:39:53,317] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:39:53,317] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:39:53,317] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:39:53,317] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:39:53,317] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:39:53,317] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 10:44:53,317] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:44:53,318] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:44:53,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:44:53,318] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:44:53,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:44:53,318] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:44:53,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:44:53,318] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:49:53,318] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:49:53,320] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:49:53,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:49:53,320] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:49:53,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:49:53,320] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:49:53,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:49:53,320] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 10:54:53,320] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:54:53,321] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:54:53,321] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:54:53,321] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:54:53,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:54:53,322] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:54:53,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:54:53,322] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:59:53,322] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 10:59:53,322] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 10:59:53,323] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 10:59:53,323] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:59:53,323] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 10:59:53,323] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 10:59:53,323] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 10:59:53,323] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 11:04:53,323] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:04:53,325] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:04:53,325] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:04:53,325] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:04:53,325] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:04:53,325] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:04:53,325] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:04:53,325] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:09:53,325] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:09:53,326] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:09:53,326] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:09:53,326] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:09:53,326] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:09:53,326] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:09:53,326] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:09:53,327] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 11:14:53,327] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:14:53,329] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:14:53,329] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:14:53,329] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:14:53,329] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:14:53,329] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:14:53,329] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:14:53,329] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:19:53,329] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:19:53,331] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:19:53,331] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:19:53,331] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:19:53,331] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:19:53,331] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:19:53,331] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:19:53,331] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 11:24:53,331] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:24:53,333] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:24:53,333] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:24:53,333] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:24:53,333] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:24:53,333] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:24:53,333] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:24:53,333] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:29:53,333] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:29:53,335] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:29:53,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:29:53,335] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:29:53,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:29:53,335] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:29:53,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:29:53,335] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 11:34:53,335] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:34:53,336] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:34:53,336] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:34:53,336] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:34:53,336] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:34:53,336] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:34:53,336] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:34:53,336] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:39:53,336] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:39:53,337] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:39:53,338] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:39:53,338] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:39:53,338] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:39:53,338] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:39:53,338] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:39:53,338] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 11:44:53,338] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:44:53,339] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:44:53,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:44:53,339] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:44:53,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:44:53,339] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:44:53,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:44:53,339] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:49:53,339] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:49:53,340] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:49:53,340] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:49:53,341] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:49:53,341] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:49:53,341] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:49:53,341] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:49:53,341] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 11:54:53,341] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:54:53,342] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:54:53,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:54:53,342] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:54:53,343] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:54:53,343] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:54:53,343] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:54:53,343] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:59:53,343] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 11:59:53,344] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 11:59:53,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 11:59:53,344] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:59:53,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 11:59:53,344] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 11:59:53,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 11:59:53,344] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 12:04:53,345] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:04:53,347] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:04:53,347] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:04:53,347] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:04:53,347] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:04:53,347] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:04:53,347] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:04:53,347] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:09:53,347] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:09:53,349] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:09:53,349] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:09:53,349] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:09:53,349] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:09:53,349] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:09:53,349] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:09:53,349] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 12:14:53,349] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:14:53,351] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:14:53,351] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:14:53,351] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:14:53,351] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:14:53,351] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:14:53,351] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:14:53,351] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:19:53,351] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:19:53,352] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:19:53,352] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:19:53,352] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:19:53,352] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:19:53,352] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:19:53,352] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:19:53,352] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 12:24:53,352] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:24:53,353] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:24:53,353] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:24:53,353] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:24:53,354] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:24:53,354] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:24:53,354] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:24:53,354] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:29:53,354] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:29:53,355] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:29:53,355] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:29:53,355] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:29:53,355] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:29:53,356] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:29:53,356] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:29:53,356] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 12:34:53,356] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:34:53,357] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:34:53,357] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:34:53,357] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:34:53,357] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:34:53,357] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:34:53,357] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:34:53,357] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:39:53,357] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:39:53,358] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:39:53,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:39:53,359] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:39:53,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:39:53,359] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:39:53,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:39:53,359] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 12:44:53,359] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:44:53,360] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:44:53,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:44:53,361] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:44:53,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:44:53,361] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:44:53,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:44:53,361] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:49:53,361] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:49:53,362] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:49:53,363] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:49:53,363] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:49:53,363] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:49:53,363] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:49:53,363] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:49:53,363] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 12:54:53,363] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:54:53,365] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:54:53,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:54:53,365] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:54:53,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:54:53,365] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:54:53,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:54:53,365] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:57:48,891] INFO Attempting to collect and submit metrics (io.confluent.support.metrics.BaseMetricsReporter)
[2022-04-30 12:57:48,896] WARN The replication factor of topic __confluent.support.metrics is 1, which is less than the desired replication factor of 3.  If you happen to add more brokers to this cluster, then it is important to increase the replication factor of the topic to eventually 3 to ensure reliable and durable metrics collection. (io.confluent.support.metrics.common.kafka.KafkaUtilities)
[2022-04-30 12:57:48,899] INFO ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://kafka-v2-infra-0.kafka-v2-infra-headless.kafka-cluster:9092, PLAINTEXT://kafka-v2-infra-1.kafka-v2-infra-headless.kafka-cluster:9092, PLAINTEXT://kafka-v2-infra-2.kafka-v2-infra-headless.kafka-cluster:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 10000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
 (org.apache.kafka.clients.producer.ProducerConfig)
[2022-04-30 12:57:48,913] INFO Kafka version: 2.2.1-cp1 (org.apache.kafka.common.utils.AppInfoParser)
[2022-04-30 12:57:48,913] INFO Kafka commitId: 7ff42411baaba1ae (org.apache.kafka.common.utils.AppInfoParser)
[2022-04-30 12:57:48,918] INFO Cluster ID: O5ZQ2OI_TNauQx6AoDXPxA (org.apache.kafka.clients.Metadata)
[2022-04-30 12:57:48,925] INFO [Producer clientId=producer-79] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. (org.apache.kafka.clients.producer.KafkaProducer)
[2022-04-30 12:57:48,927] INFO Successfully submitted metrics to Kafka topic __confluent.support.metrics (io.confluent.support.metrics.submitters.KafkaSubmitter)
[2022-04-30 12:57:54,150] INFO Successfully submitted metrics to Confluent via secure endpoint (io.confluent.support.metrics.submitters.ConfluentSubmitter)
[2022-04-30 12:59:53,365] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 12:59:53,366] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 12:59:53,367] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 12:59:53,367] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:59:53,367] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 12:59:53,367] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 12:59:53,367] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 12:59:53,367] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 13:04:53,367] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:04:53,368] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:04:53,368] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:04:53,368] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:04:53,368] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:04:53,368] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:04:53,368] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:04:53,368] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:09:53,368] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:09:53,370] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:09:53,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:09:53,370] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:09:53,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:09:53,370] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:09:53,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:09:53,370] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 13:14:53,370] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:14:53,372] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:14:53,372] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:14:53,372] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:14:53,372] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:14:53,372] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:14:53,372] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:14:53,372] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:19:53,373] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:19:53,375] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:19:53,375] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:19:53,375] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:19:53,375] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:19:53,375] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:19:53,375] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:19:53,375] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 13:24:53,375] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:24:53,376] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:24:53,376] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:24:53,376] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:24:53,376] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:24:53,376] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:24:53,376] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:24:53,376] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:29:53,377] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:29:53,377] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:29:53,378] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:29:53,378] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:29:53,378] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:29:53,378] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:29:53,378] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:29:53,378] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 13:34:53,378] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:34:53,379] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:34:53,380] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:34:53,380] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:34:53,380] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:34:53,380] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:34:53,380] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:34:53,380] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:39:53,380] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:39:53,381] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:39:53,381] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:39:53,381] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:39:53,381] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:39:53,382] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:39:53,382] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:39:53,382] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 13:44:53,382] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:44:53,383] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:44:53,383] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:44:53,383] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:44:53,384] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:44:53,384] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:44:53,384] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:44:53,384] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:49:53,384] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:49:53,386] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:49:53,386] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:49:53,386] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:49:53,386] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:49:53,386] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:49:53,386] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:49:53,386] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 13:54:53,386] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:54:53,387] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:54:53,387] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:54:53,387] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:54:53,387] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:54:53,387] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:54:53,387] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:54:53,387] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:59:53,387] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 13:59:53,388] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 13:59:53,389] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 13:59:53,389] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:59:53,389] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 13:59:53,389] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 13:59:53,389] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 13:59:53,389] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 14:04:53,390] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:04:53,392] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:04:53,392] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:04:53,392] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:04:53,392] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:04:53,392] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:04:53,392] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:04:53,392] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:09:53,392] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:09:53,394] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:09:53,394] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:09:53,394] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:09:53,394] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:09:53,394] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:09:53,394] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:09:53,394] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 14:14:53,394] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:14:53,395] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:14:53,395] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:14:53,395] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:14:53,395] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:14:53,395] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:14:53,395] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:14:53,395] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:19:53,395] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:19:53,397] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:19:53,397] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:19:53,397] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:19:53,397] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:19:53,397] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:19:53,397] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:19:53,397] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 14:24:53,397] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:24:53,398] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:24:53,399] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:24:53,399] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:24:53,399] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:24:53,399] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:24:53,399] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:24:53,399] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:29:53,399] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:29:53,400] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:29:53,400] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:29:53,400] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:29:53,400] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:29:53,400] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:29:53,400] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:29:53,400] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 14:34:53,400] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:34:53,402] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:34:53,402] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:34:53,402] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:34:53,402] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:34:53,402] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:34:53,402] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:34:53,402] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:39:53,402] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:39:53,403] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:39:53,404] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:39:53,404] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:39:53,404] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:39:53,404] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:39:53,404] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:39:53,404] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 14:44:53,404] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:44:53,405] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:44:53,405] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:44:53,405] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:44:53,405] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:44:53,405] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:44:53,405] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:44:53,405] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:49:53,405] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:49:53,406] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:49:53,406] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:49:53,406] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:49:53,406] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:49:53,406] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:49:53,406] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:49:53,406] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 14:54:53,407] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:54:53,408] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:54:53,408] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:54:53,408] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:54:53,408] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:54:53,408] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:54:53,408] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:54:53,408] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:59:53,408] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 14:59:53,409] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 14:59:53,409] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 14:59:53,409] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:59:53,409] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 14:59:53,410] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 14:59:53,410] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 14:59:53,410] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 15:04:53,410] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:04:53,410] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:04:53,411] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:04:53,411] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:04:53,411] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:04:53,411] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:04:53,411] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:04:53,411] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:09:53,411] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:09:53,412] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:09:53,412] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:09:53,412] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:09:53,412] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:09:53,412] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:09:53,412] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:09:53,412] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 15:14:53,413] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:14:53,414] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:14:53,414] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:14:53,414] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:14:53,414] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:14:53,414] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:14:53,414] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:14:53,414] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:19:53,415] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:19:53,416] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:19:53,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:19:53,416] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:19:53,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:19:53,416] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:19:53,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:19:53,416] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 15:24:53,417] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:24:53,419] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:24:53,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:24:53,419] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:24:53,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:24:53,419] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:24:53,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:24:53,419] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:29:53,420] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:29:53,421] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:29:53,421] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:29:53,421] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:29:53,421] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:29:53,421] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:29:53,421] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:29:53,421] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 15:34:53,422] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:34:53,618] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:34:53,618] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:34:53,618] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:34:53,618] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:34:53,618] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:34:53,618] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:34:53,618] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:39:53,619] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:39:53,620] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:39:53,620] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:39:53,620] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:39:53,620] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:39:53,620] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:39:53,620] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:39:53,620] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 15:44:53,620] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:44:53,622] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:44:53,622] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:44:53,622] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:44:53,622] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:44:53,622] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:44:53,622] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:44:53,622] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:49:53,622] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:49:53,623] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:49:53,623] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:49:53,623] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:49:53,623] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:49:53,623] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:49:53,623] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:49:53,623] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 15:54:53,623] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:54:53,625] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:54:53,625] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:54:53,625] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:54:53,625] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:54:53,625] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:54:53,625] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:54:53,625] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:59:53,625] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 15:59:53,626] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 15:59:53,626] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 15:59:53,627] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:59:53,627] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 15:59:53,627] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 15:59:53,627] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 15:59:53,627] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 16:04:53,627] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:04:53,628] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:04:53,628] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:04:53,628] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:04:53,628] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:04:53,628] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:04:53,628] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:04:53,628] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:09:53,629] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:09:53,630] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:09:53,630] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:09:53,630] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:09:53,630] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:09:53,630] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:09:53,630] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:09:53,630] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 16:14:53,631] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:14:53,632] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:14:53,632] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:14:53,632] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:14:53,632] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:14:53,632] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:14:53,632] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:14:53,632] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:19:53,633] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:19:53,634] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:19:53,634] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:19:53,634] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:19:53,634] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:19:53,634] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:19:53,634] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:19:53,634] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 16:24:53,634] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:24:53,636] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:24:53,636] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:24:53,636] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:24:53,636] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:24:53,636] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:24:53,636] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:24:53,636] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:29:53,637] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:29:53,638] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:29:53,638] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:29:53,638] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:29:53,638] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:29:53,638] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:29:53,638] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:29:53,638] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 16:34:53,638] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:34:53,639] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:34:53,639] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:34:53,639] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:34:53,639] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:34:53,639] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:34:53,639] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:34:53,639] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:39:53,640] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:39:53,641] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:39:53,641] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:39:53,641] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:39:53,641] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:39:53,641] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:39:53,641] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:39:53,641] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 16:44:53,642] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:44:53,643] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:44:53,643] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:44:53,643] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:44:53,643] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:44:53,643] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:44:53,643] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:44:53,643] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:49:53,643] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:49:53,645] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:49:53,645] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:49:53,645] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:49:53,645] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:49:53,645] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:49:53,645] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:49:53,645] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 16:54:53,646] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:54:53,647] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:54:53,647] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:54:53,647] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:54:53,647] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:54:53,647] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:54:53,647] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:54:53,647] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:59:53,648] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 16:59:53,649] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 16:59:53,649] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 16:59:53,649] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:59:53,649] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 16:59:53,649] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 16:59:53,649] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 16:59:53,649] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 17:04:53,650] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:04:53,652] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:04:53,652] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:04:53,652] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:04:53,652] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:04:53,652] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:04:53,652] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:04:53,652] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:09:53,652] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:09:53,654] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:09:53,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:09:53,654] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:09:53,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:09:53,654] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:09:53,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:09:53,654] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 17:14:53,654] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:14:53,656] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:14:53,656] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:14:53,656] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:14:53,656] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:14:53,656] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:14:53,656] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:14:53,656] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:19:53,656] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:19:53,657] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:19:53,657] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:19:53,657] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:19:53,658] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:19:53,658] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:19:53,658] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:19:53,658] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 17:24:53,658] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:24:53,659] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:24:53,659] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:24:53,659] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:24:53,659] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:24:53,659] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:24:53,659] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:24:53,659] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:29:53,660] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:29:53,661] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:29:53,661] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:29:53,661] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:29:53,661] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:29:53,661] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:29:53,661] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:29:53,661] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 17:34:53,662] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:34:53,663] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:34:53,663] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:34:53,663] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:34:53,663] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:34:53,663] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:34:53,663] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:34:53,663] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:39:53,663] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:39:53,665] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:39:53,665] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:39:53,665] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:39:53,665] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:39:53,665] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:39:53,665] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:39:53,665] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 17:44:53,665] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:44:53,667] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:44:53,667] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:44:53,667] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:44:53,667] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:44:53,667] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:44:53,667] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:44:53,667] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:49:53,667] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:49:53,668] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:49:53,668] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:49:53,668] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:49:53,668] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:49:53,668] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:49:53,668] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:49:53,668] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 17:54:53,668] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:54:53,670] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:54:53,670] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:54:53,670] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:54:53,670] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:54:53,670] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:54:53,670] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:54:53,670] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:59:53,671] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 17:59:53,672] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 17:59:53,673] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 17:59:53,673] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:59:53,673] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 17:59:53,673] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 17:59:53,673] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 17:59:53,673] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 18:04:53,674] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:04:53,675] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:04:53,675] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:04:53,675] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:04:53,675] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:04:53,675] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:04:53,675] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:04:53,675] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:09:53,676] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:09:53,677] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:09:53,677] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:09:53,677] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:09:53,677] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:09:53,677] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:09:53,677] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:09:53,677] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 18:14:53,678] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:14:53,679] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:14:53,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:14:53,679] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:14:53,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:14:53,679] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:14:53,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:14:53,679] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:19:53,680] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:19:53,681] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:19:53,681] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:19:53,682] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:19:53,682] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:19:53,682] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:19:53,682] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:19:53,682] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 18:24:53,682] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:24:53,683] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:24:53,683] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:24:53,683] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:24:53,683] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:24:53,683] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:24:53,683] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:24:53,684] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:29:53,684] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:29:53,685] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:29:53,685] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:29:53,685] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:29:53,685] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:29:53,685] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:29:53,685] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:29:53,685] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 18:34:53,686] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:34:53,715] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:34:53,715] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:34:53,715] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:34:53,715] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:34:53,715] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:34:53,715] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:34:53,715] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:39:53,715] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:39:53,717] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:39:53,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:39:53,717] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:39:53,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:39:53,717] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:39:53,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:39:53,717] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 18:44:53,717] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:44:53,718] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:44:53,718] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:44:53,718] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:44:53,718] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:44:53,718] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:44:53,718] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:44:53,718] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:49:53,719] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:49:53,720] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:49:53,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:49:53,720] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:49:53,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:49:53,720] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:49:53,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:49:53,720] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:50:57,525] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 18:54:53,720] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:54:53,722] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:54:53,722] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:54:53,722] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:54:53,722] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:54:53,722] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:54:53,722] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:54:53,722] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:59:53,722] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 18:59:53,724] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 18:59:53,724] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 18:59:53,724] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:59:53,724] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 18:59:53,724] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 18:59:53,724] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 18:59:53,724] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 19:04:53,724] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:04:53,725] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:04:53,726] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:04:53,726] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:04:53,726] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:04:53,726] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:04:53,726] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:04:53,726] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:09:53,726] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:09:53,727] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:09:53,727] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:09:53,727] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:09:53,727] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:09:53,727] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:09:53,727] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:09:53,727] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 19:14:53,728] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:14:53,729] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:14:53,729] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:14:53,729] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:14:53,730] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:14:53,730] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:14:53,730] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:14:53,730] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:19:53,730] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:19:53,731] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:19:53,731] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:19:53,731] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:19:53,731] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:19:53,731] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:19:53,731] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:19:53,731] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 19:24:53,732] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:24:53,733] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:24:53,733] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:24:53,733] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:24:53,733] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:24:53,733] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:24:53,733] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:24:53,733] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:29:53,734] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:29:53,735] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:29:53,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:29:53,735] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:29:53,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:29:53,735] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:29:53,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:29:53,735] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 19:34:53,735] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:34:53,736] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:34:53,736] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:34:53,736] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:34:53,736] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:34:53,736] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:34:53,736] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:34:53,736] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:39:53,737] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:39:53,738] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:39:53,738] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:39:53,738] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:39:53,738] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:39:53,738] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:39:53,738] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:39:53,738] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 19:44:53,739] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:44:53,740] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:44:53,740] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:44:53,740] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:44:53,740] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:44:53,740] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:44:53,740] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:44:53,740] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:49:53,741] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:49:53,742] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:49:53,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:49:53,743] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:49:53,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:49:53,743] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:49:53,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:49:53,743] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 19:54:53,743] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:54:53,744] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:54:53,744] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:54:53,744] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:54:53,744] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:54:53,744] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:54:53,745] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:54:53,745] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:59:53,745] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 19:59:53,746] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 19:59:53,746] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 19:59:53,746] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:59:53,746] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 19:59:53,746] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 19:59:53,746] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 19:59:53,746] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 20:04:53,747] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:04:53,749] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:04:53,749] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:04:53,749] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:04:53,749] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:04:53,749] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:04:53,749] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:04:53,749] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:09:53,749] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:09:53,750] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:09:53,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:09:53,750] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:09:53,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:09:53,750] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:09:53,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:09:53,750] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 20:14:53,751] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:14:53,751] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:14:53,751] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:14:53,751] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:14:53,751] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:14:53,752] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:14:53,752] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:14:53,752] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:19:53,752] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:19:53,752] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:19:53,752] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:19:53,752] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:19:53,752] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:19:53,752] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:19:53,752] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:19:53,752] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 20:24:53,753] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:24:53,755] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:24:53,755] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:24:53,755] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:24:53,755] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:24:53,755] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:24:53,755] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:24:53,755] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:29:53,755] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:29:53,757] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:29:53,757] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:29:53,757] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:29:53,757] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:29:53,757] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:29:53,757] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:29:53,757] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 20:34:53,757] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:34:53,759] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:34:53,759] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:34:53,759] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:34:53,759] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:34:53,759] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:34:53,759] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:34:53,759] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:39:53,759] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:39:53,761] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:39:53,761] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:39:53,761] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:39:53,761] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:39:53,761] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:39:53,761] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:39:53,761] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 20:44:53,761] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:44:53,762] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:44:53,763] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:44:53,763] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:44:53,763] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:44:53,763] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:44:53,763] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:44:53,763] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:49:53,763] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:49:53,764] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:49:53,765] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:49:53,765] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:49:53,765] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:49:53,765] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:49:53,765] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:49:53,765] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 20:54:53,765] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:54:53,766] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:54:53,767] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:54:53,767] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:54:53,767] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:54:53,767] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:54:53,767] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:54:53,767] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:59:53,767] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 20:59:53,768] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 20:59:53,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 20:59:53,769] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:59:53,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 20:59:53,769] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 20:59:53,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 20:59:53,769] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:00:57,525] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 21:04:53,769] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:04:53,771] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:04:53,771] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:04:53,771] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:04:53,771] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:04:53,771] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:04:53,771] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:04:53,771] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:09:53,771] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:09:53,773] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:09:53,773] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:09:53,773] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:09:53,773] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:09:53,773] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:09:53,773] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:09:53,773] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 21:14:53,773] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:14:53,774] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:14:53,774] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:14:53,774] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:14:53,774] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:14:53,774] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:14:53,774] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:14:53,775] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:19:53,775] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:19:53,776] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:19:53,776] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:19:53,776] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:19:53,776] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:19:53,776] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:19:53,776] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:19:53,776] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 21:24:53,777] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:24:53,778] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:24:53,778] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:24:53,778] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:24:53,778] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:24:53,778] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:24:53,778] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:24:53,778] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:29:53,778] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:29:53,780] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:29:53,780] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:29:53,780] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:29:53,780] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:29:53,780] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:29:53,780] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:29:53,780] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 21:34:53,780] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:34:53,781] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:34:53,782] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:34:53,782] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:34:53,782] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:34:53,782] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:34:53,782] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:34:53,782] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:39:53,782] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:39:53,783] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:39:53,784] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:39:53,784] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:39:53,784] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:39:53,784] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:39:53,784] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:39:53,784] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 21:44:53,784] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:44:53,786] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:44:53,786] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:44:53,786] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:44:53,786] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:44:53,786] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:44:53,786] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:44:53,786] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:49:53,786] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:49:53,787] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:49:53,788] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:49:53,788] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:49:53,788] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:49:53,788] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:49:53,788] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:49:53,788] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 21:54:53,788] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:54:53,789] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:54:53,790] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:54:53,790] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:54:53,790] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:54:53,790] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:54:53,790] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:54:53,790] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:59:53,790] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 21:59:53,791] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 21:59:53,791] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 21:59:53,791] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:59:53,791] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 21:59:53,791] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 21:59:53,791] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 21:59:53,791] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 22:04:53,791] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:04:53,793] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:04:53,793] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:04:53,793] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:04:53,793] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:04:53,793] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:04:53,793] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:04:53,793] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:09:53,793] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:09:53,795] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:09:53,795] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:09:53,795] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:09:53,795] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:09:53,795] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:09:53,795] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:09:53,795] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 22:14:53,795] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:14:53,797] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:14:53,797] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:14:53,797] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:14:53,797] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:14:53,797] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:14:53,797] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:14:53,797] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:19:53,797] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:19:53,799] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:19:53,799] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:19:53,799] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:19:53,799] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:19:53,799] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:19:53,799] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:19:53,799] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 22:24:53,799] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:24:53,800] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:24:53,800] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:24:53,800] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:24:53,800] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:24:53,800] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:24:53,800] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:24:53,801] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:29:53,801] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:29:53,802] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:29:53,802] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:29:53,802] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:29:53,802] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:29:53,802] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:29:53,802] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:29:53,802] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 22:34:53,803] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:34:53,804] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:34:53,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:34:53,804] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:34:53,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:34:53,804] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:34:53,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:34:53,804] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:39:53,805] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:39:53,806] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:39:53,806] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:39:53,806] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:39:53,806] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:39:53,806] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:39:53,806] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:39:53,806] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 22:44:53,806] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:44:53,808] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:44:53,808] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:44:53,808] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:44:53,808] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:44:53,808] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:44:53,808] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:44:53,808] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:49:53,808] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:49:53,810] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:49:53,810] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:49:53,810] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:49:53,810] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:49:53,810] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:49:53,810] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:49:53,810] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 22:54:53,810] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:54:53,812] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:54:53,812] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:54:53,812] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:54:53,812] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:54:53,812] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:54:53,812] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:54:53,812] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:59:53,812] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 22:59:53,813] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 22:59:53,813] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 22:59:53,813] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:59:53,814] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 22:59:53,814] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 22:59:53,814] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 22:59:53,814] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:00:57,616] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 23:04:53,814] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:04:53,816] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:04:53,816] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:04:53,816] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:04:53,816] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:04:53,816] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:04:53,816] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:04:53,816] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:09:53,816] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:09:53,818] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:09:53,818] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:09:53,818] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:09:53,818] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:09:53,818] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:09:53,818] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:09:53,818] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 23:14:53,818] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:14:53,820] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:14:53,820] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:14:53,820] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:14:53,820] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:14:53,820] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:14:53,820] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:14:53,820] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:19:53,820] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:19:53,821] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:19:53,821] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:19:53,821] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:19:53,821] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:19:53,821] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:19:53,821] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:19:53,821] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 23:24:53,821] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:24:53,823] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:24:53,823] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:24:53,823] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:24:53,823] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:24:53,823] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:24:53,823] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:24:53,823] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:29:53,823] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:29:53,825] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:29:53,825] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:29:53,825] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:29:53,825] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:29:53,825] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:29:53,825] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:29:53,825] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:30:57,526] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 23:34:53,825] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:34:53,827] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:34:53,827] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:34:53,827] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:34:53,827] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:34:53,827] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:34:53,827] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:34:53,827] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:39:53,828] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:39:53,829] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:39:53,829] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:39:53,829] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:39:53,829] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:39:53,829] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:39:53,829] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:39:53,829] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 23:44:53,830] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:44:53,831] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:44:53,831] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:44:53,831] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:44:53,831] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:44:53,831] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:44:53,831] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:44:53,831] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:49:53,831] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:49:53,832] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:49:53,832] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:49:53,832] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:49:53,832] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:49:53,832] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:49:53,832] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:49:53,832] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-04-30 23:54:53,832] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:54:53,834] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:54:53,834] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:54:53,834] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:54:53,834] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:54:53,834] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:54:53,834] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:54:53,834] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:59:53,834] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-30 23:59:53,835] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-04-30 23:59:53,835] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-04-30 23:59:53,835] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:59:53,835] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-04-30 23:59:53,835] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-04-30 23:59:53,835] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-04-30 23:59:53,836] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 00:04:53,836] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:04:53,837] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:04:53,837] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:04:53,838] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:04:53,838] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:04:53,838] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:04:53,838] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:04:53,838] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:09:53,838] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:09:53,839] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:09:53,839] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:09:53,839] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:09:53,840] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:09:53,840] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:09:53,840] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:09:53,840] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 00:14:53,840] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:14:53,841] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:14:53,842] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:14:53,842] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:14:53,842] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:14:53,842] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:14:53,842] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:14:53,842] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:19:53,842] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:19:53,843] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:19:53,843] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:19:53,843] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:19:53,843] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:19:53,843] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:19:53,843] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:19:53,843] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 00:24:53,843] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:24:53,845] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:24:53,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:24:53,845] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:24:53,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:24:53,845] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:24:53,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:24:53,845] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:29:53,845] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:29:53,847] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:29:53,847] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:29:53,847] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:29:53,847] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:29:53,847] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:29:53,847] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:29:53,847] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 00:34:53,847] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:34:53,848] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:34:53,848] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:34:53,848] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:34:53,848] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:34:53,848] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:34:53,848] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:34:53,848] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:39:53,849] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:39:53,850] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:39:53,850] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:39:53,850] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:39:53,850] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:39:53,851] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:39:53,851] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:39:53,851] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 00:44:53,851] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:44:53,852] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:44:53,852] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:44:53,852] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:44:53,853] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:44:53,853] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:44:53,853] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:44:53,853] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:49:53,853] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:49:53,854] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:49:53,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:49:53,854] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:49:53,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:49:53,854] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:49:53,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:49:53,854] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 00:54:53,854] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:54:53,856] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:54:53,856] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:54:53,856] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:54:53,856] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:54:53,856] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:54:53,856] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:54:53,856] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:59:53,856] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 00:59:53,858] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 00:59:53,858] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 00:59:53,858] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:59:53,858] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 00:59:53,858] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 00:59:53,858] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 00:59:53,858] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 01:04:53,859] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:04:53,860] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:04:53,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:04:53,860] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:04:53,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:04:53,860] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:04:53,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:04:53,860] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:09:53,861] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:09:53,862] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:09:53,862] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:09:53,862] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:09:53,862] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:09:53,862] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:09:53,862] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:09:53,862] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 01:14:53,862] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:14:53,863] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:14:53,863] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:14:53,863] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:14:53,863] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:14:53,863] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:14:53,863] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:14:53,863] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:19:53,863] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:19:53,865] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:19:53,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:19:53,865] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:19:53,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:19:53,865] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:19:53,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:19:53,865] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 01:24:53,865] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:24:53,866] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:24:53,866] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:24:53,866] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:24:53,866] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:24:53,866] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:24:53,866] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:24:53,866] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:29:53,867] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:29:53,868] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:29:53,868] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:29:53,868] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:29:53,868] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:29:53,868] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:29:53,868] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:29:53,868] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 01:34:53,869] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:34:53,870] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:34:53,870] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:34:53,870] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:34:53,870] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:34:53,870] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:34:53,870] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:34:53,870] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:39:53,871] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:39:53,872] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:39:53,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:39:53,872] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:39:53,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:39:53,872] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:39:53,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:39:53,872] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 01:44:53,872] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:44:53,874] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:44:53,874] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:44:53,874] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:44:53,874] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:44:53,874] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:44:53,874] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:44:53,874] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:49:53,874] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:49:53,875] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:49:53,876] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:49:53,876] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:49:53,876] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:49:53,876] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:49:53,876] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:49:53,876] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 01:54:53,876] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:54:53,877] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:54:53,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:54:53,878] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:54:53,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:54:53,878] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:54:53,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:54:53,878] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:59:53,878] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 01:59:53,879] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 01:59:53,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 01:59:53,879] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:59:53,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 01:59:53,879] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 01:59:53,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 01:59:53,879] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 02:04:53,879] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:04:53,880] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:04:53,880] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:04:53,880] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:04:53,880] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:04:53,880] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:04:53,880] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:04:53,880] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:09:53,881] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:09:53,882] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:09:53,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:09:53,882] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:09:53,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:09:53,882] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:09:53,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:09:53,882] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 02:14:53,882] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:14:53,884] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:14:53,884] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:14:53,884] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:14:53,884] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:14:53,884] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:14:53,884] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:14:53,884] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:19:53,884] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:19:53,886] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:19:53,886] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:19:53,886] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:19:53,886] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:19:53,886] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:19:53,886] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:19:53,886] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 02:24:53,886] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:24:53,888] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:24:53,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:24:53,888] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:24:53,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:24:53,888] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:24:53,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:24:53,888] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:29:53,888] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:29:53,890] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:29:53,890] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:29:53,890] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:29:53,890] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:29:53,890] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:29:53,890] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:29:53,890] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 02:34:53,890] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:34:53,892] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:34:53,892] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:34:53,892] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:34:53,892] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:34:53,892] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:34:53,892] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:34:53,892] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:39:53,892] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:39:53,894] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:39:53,894] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:39:53,894] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:39:53,894] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:39:53,894] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:39:53,894] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:39:53,894] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 02:44:53,894] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:44:53,896] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:44:53,896] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:44:53,896] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:44:53,896] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:44:53,896] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:44:53,896] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:44:53,896] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:49:53,897] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:49:53,898] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:49:53,898] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:49:53,898] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:49:53,898] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:49:53,898] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:49:53,898] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:49:53,898] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 02:54:53,898] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:54:53,899] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:54:53,899] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:54:53,899] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:54:53,899] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:54:53,899] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:54:53,899] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:54:53,899] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:59:53,899] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 02:59:53,901] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 02:59:53,901] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 02:59:53,901] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:59:53,901] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 02:59:53,901] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 02:59:53,901] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 02:59:53,901] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 03:04:53,902] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:04:53,903] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:04:53,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:04:53,903] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:04:53,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:04:53,903] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:04:53,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:04:53,903] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:09:53,903] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:09:53,904] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:09:53,904] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:09:53,904] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:09:53,904] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:09:53,905] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:09:53,905] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:09:53,905] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 03:14:53,905] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:14:53,906] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:14:53,906] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:14:53,906] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:14:53,906] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:14:53,906] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:14:53,906] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:14:53,906] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:19:53,907] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:19:53,908] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:19:53,908] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:19:53,909] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:19:53,909] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:19:53,909] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:19:53,909] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:19:53,909] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 03:24:53,909] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:24:53,910] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:24:53,910] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:24:53,910] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:24:53,911] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:24:53,911] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:24:53,911] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:24:53,911] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:29:53,911] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:29:53,912] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:29:53,912] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:29:53,912] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:29:53,912] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:29:53,912] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:29:53,912] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:29:53,912] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 03:34:53,912] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:34:53,914] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:34:53,914] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:34:53,914] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:34:53,914] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:34:53,914] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:34:53,914] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:34:53,914] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:39:54,017] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:39:54,018] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:39:54,018] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:39:54,019] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:39:54,019] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:39:54,019] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:39:54,019] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:39:54,019] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 03:44:54,019] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:44:54,020] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:44:54,020] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:44:54,020] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:44:54,020] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:44:54,021] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:44:54,021] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:44:54,021] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:49:54,021] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:49:54,022] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:49:54,022] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:49:54,022] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:49:54,022] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:49:54,023] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:49:54,023] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:49:54,023] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 03:54:54,023] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:54:54,024] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:54:54,024] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:54:54,024] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:54:54,024] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:54:54,024] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:54:54,024] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:54:54,024] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:59:54,025] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 03:59:54,026] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 03:59:54,026] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 03:59:54,026] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:59:54,026] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 03:59:54,026] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 03:59:54,026] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 03:59:54,026] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 04:04:54,027] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:04:54,028] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:04:54,028] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:04:54,028] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:04:54,029] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:04:54,029] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:04:54,029] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:04:54,029] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:09:54,029] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:09:54,030] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:09:54,030] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:09:54,030] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:09:54,030] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:09:54,031] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:09:54,031] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:09:54,031] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 04:14:54,031] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:14:54,031] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:14:54,032] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:14:54,032] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:14:54,032] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:14:54,032] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:14:54,032] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:14:54,032] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:19:54,032] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:19:54,033] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:19:54,033] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:19:54,034] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:19:54,034] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:19:54,034] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:19:54,034] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:19:54,034] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 04:24:54,034] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:24:54,035] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:24:54,035] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:24:54,035] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:24:54,035] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:24:54,036] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:24:54,036] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:24:54,036] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:29:54,036] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:29:54,037] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:29:54,037] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:29:54,037] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:29:54,037] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:29:54,037] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:29:54,037] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:29:54,037] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 04:34:54,038] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:34:54,039] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:34:54,039] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:34:54,039] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:34:54,039] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:34:54,039] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:34:54,039] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:34:54,039] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:39:54,040] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:39:54,041] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:39:54,041] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:39:54,041] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:39:54,041] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:39:54,041] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:39:54,041] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:39:54,041] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 04:44:54,042] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:44:54,043] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:44:54,043] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:44:54,043] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:44:54,043] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:44:54,043] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:44:54,043] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:44:54,043] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:49:54,044] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:49:54,045] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:49:54,046] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:49:54,046] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:49:54,046] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:49:54,046] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:49:54,046] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:49:54,046] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 04:54:54,046] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:54:54,047] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:54:54,047] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:54:54,047] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:54:54,047] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:54:54,047] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:54:54,048] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:54:54,048] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:59:54,048] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 04:59:54,112] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 04:59:54,112] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 04:59:54,112] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:59:54,112] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 04:59:54,112] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 04:59:54,112] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 04:59:54,112] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 05:04:54,113] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:04:54,114] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:04:54,114] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:04:54,114] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:04:54,114] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:04:54,114] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:04:54,114] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:04:54,114] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:09:54,115] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:09:54,116] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:09:54,116] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:09:54,116] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:09:54,116] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:09:54,116] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:09:54,116] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:09:54,116] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 05:14:54,116] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:14:54,117] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:14:54,117] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:14:54,118] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:14:54,118] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:14:54,118] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:14:54,118] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:14:54,118] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:19:54,118] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:19:54,119] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:19:54,119] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:19:54,120] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:19:54,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:19:54,120] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:19:54,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:19:54,120] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 05:24:54,120] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:24:54,121] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:24:54,121] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:24:54,121] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:24:54,121] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:24:54,121] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:24:54,121] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:24:54,121] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:29:54,121] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:29:54,121] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:29:54,122] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:29:54,122] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:29:54,122] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:29:54,122] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:29:54,122] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:29:54,122] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 05:34:54,122] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:34:54,123] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:34:54,123] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:34:54,123] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:34:54,123] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:34:54,123] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:34:54,123] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:34:54,123] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:39:54,124] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:39:54,125] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:39:54,125] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:39:54,125] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:39:54,125] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:39:54,125] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:39:54,125] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:39:54,125] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 05:44:54,126] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:44:54,127] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:44:54,127] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:44:54,127] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:44:54,127] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:44:54,127] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:44:54,127] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:44:54,127] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:49:54,127] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:49:54,129] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:49:54,129] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:49:54,129] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:49:54,129] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:49:54,129] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:49:54,129] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:49:54,129] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 05:54:54,129] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:54:54,130] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:54:54,130] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:54:54,130] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:54:54,131] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:54:54,131] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:54:54,131] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:54:54,131] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:59:54,131] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 05:59:54,132] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 05:59:54,132] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 05:59:54,132] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:59:54,132] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 05:59:54,132] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 05:59:54,132] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 05:59:54,132] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 06:04:54,132] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:04:54,133] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:04:54,133] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:04:54,133] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:04:54,133] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:04:54,133] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:04:54,133] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:04:54,133] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:09:54,134] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:09:54,135] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:09:54,135] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:09:54,135] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:09:54,135] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:09:54,135] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:09:54,135] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:09:54,135] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 06:14:54,135] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:14:54,137] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:14:54,137] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:14:54,137] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:14:54,137] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:14:54,137] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:14:54,137] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:14:54,137] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:19:54,137] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:19:54,139] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:19:54,139] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:19:54,139] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:19:54,139] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:19:54,139] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:19:54,139] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:19:54,139] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 06:24:54,139] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:24:54,140] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:24:54,140] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:24:54,140] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:24:54,140] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:24:54,140] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:24:54,140] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:24:54,140] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:29:54,140] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:29:54,141] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:29:54,142] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:29:54,142] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:29:54,142] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:29:54,142] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:29:54,142] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:29:54,142] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 06:34:54,142] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:34:54,143] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:34:54,143] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:34:54,143] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:34:54,143] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:34:54,143] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:34:54,143] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:34:54,143] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:39:54,144] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:39:54,145] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:39:54,145] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:39:54,145] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:39:54,145] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:39:54,145] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:39:54,145] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:39:54,145] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 06:44:54,146] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:44:54,147] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:44:54,147] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:44:54,147] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:44:54,147] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:44:54,147] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:44:54,147] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:44:54,147] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:49:54,147] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:49:54,149] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:49:54,149] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:49:54,149] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:49:54,149] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:49:54,149] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:49:54,149] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:49:54,149] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 06:54:54,150] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:54:54,151] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:54:54,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:54:54,151] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:54:54,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:54:54,151] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:54:54,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:54:54,151] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:59:54,152] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 06:59:54,153] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 06:59:54,153] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 06:59:54,153] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:59:54,153] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 06:59:54,153] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 06:59:54,153] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 06:59:54,153] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 07:04:54,154] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:04:54,155] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:04:54,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:04:54,155] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:04:54,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:04:54,155] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:04:54,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:04:54,155] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:09:54,155] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:09:54,157] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:09:54,157] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:09:54,157] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:09:54,157] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:09:54,157] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:09:54,157] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:09:54,157] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 07:14:54,158] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:14:54,159] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:14:54,159] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:14:54,159] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:14:54,159] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:14:54,159] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:14:54,159] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:14:54,159] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:19:54,160] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:19:54,161] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:19:54,161] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:19:54,161] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:19:54,161] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:19:54,161] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:19:54,161] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:19:54,161] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 07:24:54,162] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:24:54,163] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:24:54,163] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:24:54,163] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:24:54,163] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:24:54,163] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:24:54,163] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:24:54,163] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:29:54,163] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:29:54,165] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:29:54,165] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:29:54,165] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:29:54,165] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:29:54,165] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:29:54,165] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:29:54,165] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 07:34:54,165] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:34:54,166] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:34:54,166] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:34:54,166] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:34:54,166] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:34:54,166] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:34:54,166] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:34:54,166] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:39:54,167] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:39:54,168] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:39:54,168] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:39:54,168] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:39:54,168] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:39:54,168] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:39:54,168] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:39:54,168] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 07:44:54,168] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:44:54,169] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:44:54,170] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:44:54,170] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:44:54,170] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:44:54,170] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:44:54,170] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:44:54,170] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:49:54,170] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:49:54,171] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:49:54,171] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:49:54,171] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:49:54,171] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:49:54,171] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:49:54,171] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:49:54,172] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 07:54:54,172] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:54:54,173] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:54:54,173] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:54:54,173] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:54:54,174] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:54:54,174] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:54:54,174] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:54:54,174] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:59:54,174] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 07:59:54,174] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 07:59:54,174] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 07:59:54,174] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:59:54,174] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 07:59:54,174] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 07:59:54,174] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 07:59:54,174] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 08:04:54,175] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:04:54,176] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:04:54,176] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:04:54,176] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:04:54,176] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:04:54,176] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:04:54,176] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:04:54,176] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:09:54,176] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:09:54,178] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:09:54,178] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:09:54,178] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:09:54,178] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:09:54,178] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:09:54,178] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:09:54,179] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 08:14:54,179] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:14:54,180] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:14:54,180] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:14:54,180] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:14:54,180] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:14:54,180] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:14:54,180] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:14:54,180] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:19:54,181] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:19:54,182] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:19:54,182] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:19:54,182] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:19:54,182] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:19:54,182] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:19:54,182] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:19:54,182] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 08:24:54,182] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:24:54,184] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:24:54,184] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:24:54,184] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:24:54,184] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:24:54,184] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:24:54,184] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:24:54,184] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:29:54,184] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:29:54,186] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:29:54,186] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:29:54,186] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:29:54,186] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:29:54,186] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:29:54,186] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:29:54,186] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 08:34:54,186] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:34:54,187] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:34:54,188] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:34:54,188] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:34:54,188] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:34:54,188] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:34:54,188] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:34:54,188] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:39:54,188] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:39:54,189] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:39:54,189] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:39:54,189] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:39:54,189] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:39:54,189] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:39:54,189] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:39:54,190] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 08:44:54,190] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:44:54,316] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:44:54,316] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:44:54,316] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:44:54,316] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:44:54,316] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:44:54,316] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:44:54,316] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:49:54,317] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:49:54,318] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:49:54,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:49:54,318] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:49:54,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:49:54,318] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:49:54,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:49:54,318] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 08:54:54,319] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:54:54,320] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:54:54,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:54:54,320] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:54:54,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:54:54,320] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:54:54,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:54:54,320] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:59:54,320] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 08:59:54,322] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 08:59:54,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 08:59:54,322] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:59:54,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 08:59:54,322] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 08:59:54,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 08:59:54,322] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 09:04:54,322] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:04:54,324] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:04:54,324] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:04:54,324] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:04:54,324] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:04:54,324] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:04:54,324] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:04:54,324] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:09:54,325] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:09:54,326] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:09:54,326] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:09:54,326] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:09:54,326] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:09:54,326] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:09:54,326] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:09:54,326] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 09:14:54,327] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:14:54,328] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:14:54,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:14:54,328] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:14:54,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:14:54,328] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:14:54,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:14:54,328] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:19:54,328] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:19:54,329] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:19:54,329] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:19:54,329] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:19:54,329] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:19:54,329] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:19:54,329] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:19:54,329] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 09:24:54,330] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:24:54,330] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:24:54,331] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:24:54,331] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:24:54,331] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:24:54,331] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:24:54,331] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:24:54,331] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:29:54,331] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:29:54,332] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:29:54,332] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:29:54,332] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:29:54,332] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:29:54,333] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:29:54,333] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:29:54,333] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 09:34:54,333] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:34:54,334] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:34:54,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:34:54,335] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:34:54,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:34:54,335] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:34:54,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:34:54,335] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:39:54,335] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:39:54,336] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:39:54,336] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:39:54,337] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:39:54,337] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:39:54,337] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:39:54,337] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:39:54,337] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 09:44:54,337] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:44:54,338] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:44:54,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:44:54,339] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:44:54,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:44:54,339] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:44:54,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:44:54,339] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:49:54,339] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:49:54,340] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:49:54,340] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:49:54,340] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:49:54,341] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:49:54,341] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:49:54,341] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:49:54,341] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 09:54:54,341] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:54:54,342] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:54:54,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:54:54,342] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:54:54,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:54:54,342] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:54:54,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:54:54,342] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:59:54,343] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 09:59:54,344] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 09:59:54,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 09:59:54,344] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:59:54,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 09:59:54,344] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 09:59:54,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 09:59:54,344] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 10:04:54,344] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:04:54,346] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:04:54,346] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:04:54,346] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:04:54,346] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:04:54,346] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:04:54,346] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:04:54,346] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:09:54,346] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:09:54,348] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:09:54,348] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:09:54,348] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:09:54,348] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:09:54,348] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:09:54,348] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:09:54,348] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 10:14:54,349] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:14:54,350] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:14:54,350] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:14:54,350] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:14:54,350] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:14:54,350] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:14:54,350] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:14:54,350] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:19:54,350] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:19:54,352] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:19:54,352] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:19:54,352] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:19:54,352] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:19:54,352] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:19:54,352] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:19:54,352] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 10:24:54,352] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:24:54,354] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:24:54,354] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:24:54,354] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:24:54,354] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:24:54,354] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:24:54,354] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:24:54,354] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:29:54,354] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:29:54,356] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:29:54,356] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:29:54,356] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:29:54,356] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:29:54,356] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:29:54,356] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:29:54,356] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 10:34:54,356] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:34:54,357] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:34:54,358] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:34:54,358] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:34:54,358] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:34:54,358] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:34:54,358] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:34:54,358] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:39:54,358] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:39:54,359] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:39:54,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:39:54,359] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:39:54,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:39:54,360] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:39:54,360] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:39:54,360] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 10:44:54,360] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:44:54,360] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:44:54,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:44:54,361] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:44:54,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:44:54,361] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:44:54,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:44:54,361] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:49:54,361] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:49:54,362] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:49:54,362] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:49:54,362] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:49:54,362] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:49:54,362] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:49:54,363] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:49:54,363] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 10:54:54,363] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:54:54,364] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:54:54,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:54:54,365] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:54:54,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:54:54,365] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:54:54,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:54:54,365] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:59:54,365] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 10:59:54,366] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 10:59:54,366] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 10:59:54,366] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:59:54,366] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 10:59:54,366] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 10:59:54,366] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 10:59:54,366] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 11:04:54,367] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:04:54,368] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:04:54,368] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:04:54,368] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:04:54,368] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:04:54,368] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:04:54,368] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:04:54,368] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:09:54,368] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:09:54,369] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:09:54,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:09:54,370] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:09:54,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:09:54,370] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:09:54,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:09:54,370] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 11:14:54,370] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:14:54,371] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:14:54,372] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:14:54,372] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:14:54,372] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:14:54,372] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:14:54,372] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:14:54,372] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:19:54,372] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:19:54,373] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:19:54,373] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:19:54,373] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:19:54,373] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:19:54,374] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:19:54,374] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:19:54,374] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 11:24:54,374] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:24:54,375] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:24:54,376] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:24:54,376] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:24:54,376] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:24:54,376] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:24:54,376] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:24:54,376] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:29:54,376] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:29:54,377] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:29:54,378] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:29:54,378] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:29:54,378] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:29:54,378] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:29:54,378] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:29:54,378] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 11:34:54,378] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:34:54,379] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:34:54,379] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:34:54,379] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:34:54,379] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:34:54,379] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:34:54,379] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:34:54,379] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:39:54,380] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:39:54,381] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:39:54,381] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:39:54,381] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:39:54,381] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:39:54,381] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:39:54,381] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:39:54,381] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 11:44:54,381] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:44:54,383] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:44:54,383] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:44:54,383] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:44:54,383] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:44:54,383] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:44:54,383] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:44:54,383] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:49:54,383] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:49:54,385] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:49:54,385] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:49:54,385] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:49:54,385] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:49:54,385] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:49:54,385] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:49:54,385] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 11:54:54,385] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:54:54,386] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:54:54,387] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:54:54,387] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:54:54,387] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:54:54,387] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:54:54,387] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:54:54,387] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:59:54,387] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 11:59:54,516] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 11:59:54,516] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 11:59:54,516] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:59:54,516] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 11:59:54,516] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 11:59:54,516] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 11:59:54,517] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:00:57,526] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 12:04:54,517] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:04:54,518] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:04:54,519] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:04:54,519] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:04:54,519] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:04:54,519] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:04:54,519] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:04:54,519] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:09:54,519] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:09:54,520] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:09:54,521] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:09:54,521] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:09:54,521] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:09:54,521] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:09:54,521] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:09:54,521] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 12:14:54,521] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:14:54,523] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:14:54,523] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:14:54,523] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:14:54,523] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:14:54,523] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:14:54,523] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:14:54,523] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:19:54,524] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:19:54,525] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:19:54,525] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:19:54,525] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:19:54,525] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:19:54,525] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:19:54,525] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:19:54,525] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 12:24:54,525] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:24:54,526] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:24:54,526] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:24:54,526] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:24:54,526] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:24:54,526] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:24:54,526] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:24:54,526] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:29:54,527] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:29:54,527] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:29:54,527] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:29:54,528] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:29:54,528] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:29:54,528] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:29:54,528] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:29:54,528] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 12:34:54,528] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:34:54,529] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:34:54,529] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:34:54,529] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:34:54,529] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:34:54,529] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:34:54,529] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:34:54,529] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:39:54,530] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:39:54,531] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:39:54,531] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:39:54,531] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:39:54,531] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:39:54,531] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:39:54,531] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:39:54,531] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 12:44:54,532] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:44:54,533] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:44:54,533] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:44:54,533] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:44:54,533] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:44:54,533] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:44:54,533] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:44:54,533] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:49:54,534] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:49:54,534] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:49:54,534] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:49:54,534] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:49:54,534] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:49:54,534] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:49:54,534] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:49:54,534] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 12:54:54,535] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:54:54,536] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:54:54,536] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:54:54,536] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:54:54,536] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:54:54,536] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:54:54,536] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:54:54,536] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:59:54,536] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 12:59:54,537] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 12:59:54,537] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 12:59:54,537] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:59:54,537] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 12:59:54,537] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 12:59:54,537] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 12:59:54,538] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 13:01:42,177] INFO Attempting to collect and submit metrics (io.confluent.support.metrics.BaseMetricsReporter)
[2022-05-01 13:01:42,181] WARN The replication factor of topic __confluent.support.metrics is 1, which is less than the desired replication factor of 3.  If you happen to add more brokers to this cluster, then it is important to increase the replication factor of the topic to eventually 3 to ensure reliable and durable metrics collection. (io.confluent.support.metrics.common.kafka.KafkaUtilities)
[2022-05-01 13:01:42,185] INFO ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://kafka-v2-infra-0.kafka-v2-infra-headless.kafka-cluster:9092, PLAINTEXT://kafka-v2-infra-1.kafka-v2-infra-headless.kafka-cluster:9092, PLAINTEXT://kafka-v2-infra-2.kafka-v2-infra-headless.kafka-cluster:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 10000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
 (org.apache.kafka.clients.producer.ProducerConfig)
[2022-05-01 13:01:42,200] INFO Kafka version: 2.2.1-cp1 (org.apache.kafka.common.utils.AppInfoParser)
[2022-05-01 13:01:42,201] INFO Kafka commitId: 7ff42411baaba1ae (org.apache.kafka.common.utils.AppInfoParser)
[2022-05-01 13:01:42,209] INFO Cluster ID: O5ZQ2OI_TNauQx6AoDXPxA (org.apache.kafka.clients.Metadata)
[2022-05-01 13:01:42,217] INFO [Producer clientId=producer-80] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. (org.apache.kafka.clients.producer.KafkaProducer)
[2022-05-01 13:01:42,220] INFO Successfully submitted metrics to Kafka topic __confluent.support.metrics (io.confluent.support.metrics.submitters.KafkaSubmitter)
[2022-05-01 13:01:43,869] INFO Successfully submitted metrics to Confluent via secure endpoint (io.confluent.support.metrics.submitters.ConfluentSubmitter)
[2022-05-01 13:04:54,538] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:04:54,540] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:04:54,540] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:04:54,540] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:04:54,540] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:04:54,540] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:04:54,540] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:04:54,540] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:09:54,540] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:09:54,542] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:09:54,542] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:09:54,542] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:09:54,542] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:09:54,542] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:09:54,542] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:09:54,542] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 13:14:54,542] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:14:54,544] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:14:54,544] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:14:54,544] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:14:54,544] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:14:54,544] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:14:54,544] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:14:54,544] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:19:54,544] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:19:54,546] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:19:54,546] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:19:54,546] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:19:54,546] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:19:54,546] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:19:54,546] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:19:54,546] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 13:24:54,546] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:24:54,547] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:24:54,548] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:24:54,548] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:24:54,548] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:24:54,548] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:24:54,548] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:24:54,548] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:29:54,548] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:29:54,549] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:29:54,549] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:29:54,550] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:29:54,550] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:29:54,550] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:29:54,550] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:29:54,550] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 13:34:54,550] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:34:54,551] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:34:54,551] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:34:54,551] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:34:54,551] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:34:54,551] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:34:54,551] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:34:54,551] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:39:54,552] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:39:54,553] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:39:54,553] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:39:54,553] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:39:54,553] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:39:54,553] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:39:54,553] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:39:54,553] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 13:44:54,554] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:44:54,555] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:44:54,555] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:44:54,555] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:44:54,555] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:44:54,555] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:44:54,555] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:44:54,555] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:49:54,556] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:49:54,557] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:49:54,557] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:49:54,557] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:49:54,557] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:49:54,557] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:49:54,557] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:49:54,557] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 13:54:54,557] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:54:54,559] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:54:54,559] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:54:54,559] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:54:54,559] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:54:54,559] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:54:54,559] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:54:54,559] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:59:54,559] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 13:59:54,561] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 13:59:54,561] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 13:59:54,561] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:59:54,561] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 13:59:54,561] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 13:59:54,561] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 13:59:54,561] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 14:04:54,562] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:04:54,563] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:04:54,563] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:04:54,563] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:04:54,563] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:04:54,563] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:04:54,563] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:04:54,563] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:09:54,563] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:09:54,566] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:09:54,566] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:09:54,566] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:09:54,566] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:09:54,566] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:09:54,566] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:09:54,566] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 14:14:54,566] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:14:54,568] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:14:54,568] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:14:54,568] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:14:54,568] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:14:54,568] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:14:54,568] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:14:54,568] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:19:54,568] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:19:54,569] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:19:54,570] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:19:54,570] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:19:54,570] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:19:54,570] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:19:54,570] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:19:54,570] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 14:24:54,570] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:24:54,571] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:24:54,571] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:24:54,571] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:24:54,572] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:24:54,572] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:24:54,572] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:24:54,572] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:29:54,572] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:29:54,573] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:29:54,573] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:29:54,573] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:29:54,573] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:29:54,573] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:29:54,573] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:29:54,574] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 14:34:54,574] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:34:54,575] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:34:54,575] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:34:54,575] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:34:54,575] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:34:54,575] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:34:54,575] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:34:54,575] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:39:54,575] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:39:54,577] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:39:54,577] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:39:54,577] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:39:54,577] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:39:54,577] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:39:54,577] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:39:54,577] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 14:44:54,577] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:44:54,579] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:44:54,579] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:44:54,579] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:44:54,579] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:44:54,579] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:44:54,579] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:44:54,579] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:49:54,579] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:49:54,581] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:49:54,581] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:49:54,581] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:49:54,581] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:49:54,581] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:49:54,581] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:49:54,581] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 14:54:54,581] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:54:54,582] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:54:54,583] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:54:54,583] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:54:54,583] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:54:54,583] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:54:54,583] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:54:54,583] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:59:54,583] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 14:59:54,584] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 14:59:54,584] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 14:59:54,584] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:59:54,584] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 14:59:54,585] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 14:59:54,585] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 14:59:54,585] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 15:04:54,586] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:04:54,587] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:04:54,587] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:04:54,587] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:04:54,587] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:04:54,587] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:04:54,587] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:04:54,587] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:09:54,588] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:09:54,588] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:09:54,588] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:09:54,588] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:09:54,588] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:09:54,588] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:09:54,588] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:09:54,588] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 15:14:54,589] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:14:54,590] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:14:54,590] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:14:54,590] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:14:54,590] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:14:54,590] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:14:54,590] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:14:54,590] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:19:54,590] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:19:54,591] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:19:54,592] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:19:54,592] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:19:54,592] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:19:54,592] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:19:54,592] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:19:54,592] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 15:24:54,592] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:24:54,593] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:24:54,593] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:24:54,593] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:24:54,594] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:24:54,594] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:24:54,594] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:24:54,594] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:29:54,594] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:29:54,595] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:29:54,595] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:29:54,595] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:29:54,595] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:29:54,595] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:29:54,595] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:29:54,595] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:30:57,525] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 15:34:54,596] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:34:54,597] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:34:54,597] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:34:54,597] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:34:54,597] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:34:54,597] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:34:54,597] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:34:54,597] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:39:54,598] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:39:54,600] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:39:54,600] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:39:54,600] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:39:54,600] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:39:54,600] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:39:54,600] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:39:54,600] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 15:44:54,600] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:44:54,602] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:44:54,602] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:44:54,602] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:44:54,602] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:44:54,602] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:44:54,602] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:44:54,602] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:49:54,712] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:49:54,713] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:49:54,713] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:49:54,713] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:49:54,713] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:49:54,713] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:49:54,713] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:49:54,714] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 15:54:54,714] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:54:54,715] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:54:54,715] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:54:54,715] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:54:54,715] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:54:54,715] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:54:54,715] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:54:54,715] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:59:54,716] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:59:54,717] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 15:59:54,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 15:59:54,717] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:59:54,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 15:59:54,717] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:59:54,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 15:59:54,717] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 16:04:54,718] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:04:54,719] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:04:54,719] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:04:54,719] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:04:54,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:04:54,720] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:04:54,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:04:54,720] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:09:54,720] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:09:54,721] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:09:54,721] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:09:54,721] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:09:54,721] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:09:54,721] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:09:54,721] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:09:54,721] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 16:14:54,722] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:14:54,723] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:14:54,723] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:14:54,723] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:14:54,723] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:14:54,723] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:14:54,723] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:14:54,723] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:19:54,724] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:19:54,725] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:19:54,725] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:19:54,725] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:19:54,725] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:19:54,725] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:19:54,725] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:19:54,725] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 16:24:54,725] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:24:54,727] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:24:54,727] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:24:54,727] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:24:54,727] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:24:54,727] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:24:54,727] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:24:54,727] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:29:54,727] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:29:54,729] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:29:54,729] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:29:54,729] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:29:54,729] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:29:54,729] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:29:54,729] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:29:54,729] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 16:34:54,729] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:34:54,730] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:34:54,730] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:34:54,730] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:34:54,730] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:34:54,730] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:34:54,730] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:34:54,730] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:39:54,731] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:39:54,732] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:39:54,732] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:39:54,732] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:39:54,732] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:39:54,732] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:39:54,732] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:39:54,732] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 16:44:54,733] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:44:54,734] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:44:54,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:44:54,735] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:44:54,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:44:54,735] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:44:54,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:44:54,735] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:49:54,735] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:49:54,736] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:49:54,736] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:49:54,736] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:49:54,736] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:49:54,737] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:49:54,737] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:49:54,737] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 16:54:54,737] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:54:54,738] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:54:54,738] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:54:54,738] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:54:54,738] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:54:54,738] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:54:54,738] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:54:54,738] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:59:54,739] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 16:59:54,740] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 16:59:54,740] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 16:59:54,740] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:59:54,740] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 16:59:54,740] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 16:59:54,740] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 16:59:54,740] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:00:57,525] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 17:04:54,741] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:04:54,742] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:04:54,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:04:54,743] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:04:54,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:04:54,743] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:04:54,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:04:54,743] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:09:54,743] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:09:54,744] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:09:54,744] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:09:54,744] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:09:54,744] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:09:54,744] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:09:54,744] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:09:54,744] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 17:14:54,744] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:14:54,745] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:14:54,745] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:14:54,745] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:14:54,746] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:14:54,746] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:14:54,746] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:14:54,746] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:19:54,746] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:19:54,747] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:19:54,747] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:19:54,747] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:19:54,747] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:19:54,747] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:19:54,747] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:19:54,747] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 17:24:54,748] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:24:54,749] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:24:54,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:24:54,750] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:24:54,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:24:54,750] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:24:54,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:24:54,750] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:29:54,750] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:29:54,751] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:29:54,751] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:29:54,751] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:29:54,751] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:29:54,751] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:29:54,752] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:29:54,752] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 17:34:54,752] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:34:54,753] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:34:54,753] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:34:54,753] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:34:54,753] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:34:54,753] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:34:54,753] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:34:54,753] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:39:54,754] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:39:54,755] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:39:54,755] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:39:54,755] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:39:54,755] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:39:54,755] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:39:54,755] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:39:54,755] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:40:57,525] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 17:44:54,755] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:44:54,757] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:44:54,757] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:44:54,757] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:44:54,757] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:44:54,757] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:44:54,757] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:44:54,757] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:49:54,757] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:49:54,759] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:49:54,759] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:49:54,759] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:49:54,759] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:49:54,759] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:49:54,759] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:49:54,759] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 17:54:54,759] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:54:54,760] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:54:54,760] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:54:54,760] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:54:54,760] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:54:54,760] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:54:54,760] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:54:54,760] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:59:54,760] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:59:54,762] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 17:59:54,762] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 17:59:54,762] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:59:54,762] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 17:59:54,762] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:59:54,762] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 17:59:54,762] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 18:04:54,762] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:04:54,764] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:04:54,764] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:04:54,764] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:04:54,764] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:04:54,764] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:04:54,764] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:04:54,764] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:09:54,764] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:09:54,765] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:09:54,765] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:09:54,765] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:09:54,765] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:09:54,765] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:09:54,765] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:09:54,765] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 18:14:54,765] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:14:54,767] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:14:54,767] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:14:54,767] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:14:54,767] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:14:54,767] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:14:54,767] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:14:54,767] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:19:54,767] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:19:54,769] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:19:54,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:19:54,769] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:19:54,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:19:54,769] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:19:54,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:19:54,769] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 18:24:54,769] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:24:54,771] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:24:54,771] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:24:54,771] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:24:54,771] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:24:54,771] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:24:54,771] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:24:54,771] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:29:54,771] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:29:54,772] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:29:54,772] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:29:54,772] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:29:54,772] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:29:54,772] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:29:54,772] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:29:54,772] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 18:34:54,772] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:34:54,773] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:34:54,774] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:34:54,774] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:34:54,774] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:34:54,774] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:34:54,774] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:34:54,774] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:39:54,774] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:39:54,775] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:39:54,776] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:39:54,776] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:39:54,776] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:39:54,776] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:39:54,776] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:39:54,776] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 18:44:54,776] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:44:54,777] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:44:54,778] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:44:54,778] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:44:54,778] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:44:54,778] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:44:54,778] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:44:54,778] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:49:54,778] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:49:54,779] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:49:54,779] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:49:54,779] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:49:54,779] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:49:54,779] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:49:54,779] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:49:54,780] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 18:54:54,780] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:54:54,781] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:54:54,781] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:54:54,781] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:54:54,781] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:54:54,781] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:54:54,781] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:54:54,782] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:59:54,782] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 18:59:54,783] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 18:59:54,783] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 18:59:54,783] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:59:54,783] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 18:59:54,783] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 18:59:54,783] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 18:59:54,783] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 19:04:54,784] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:04:54,785] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:04:54,785] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:04:54,785] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:04:54,785] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:04:54,785] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:04:54,785] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:04:54,785] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:09:54,785] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:09:54,787] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:09:54,787] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:09:54,787] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:09:54,787] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:09:54,787] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:09:54,787] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:09:54,787] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 19:14:54,787] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:14:54,789] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:14:54,789] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:14:54,789] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:14:54,789] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:14:54,789] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:14:54,789] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:14:54,789] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:19:54,789] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:19:54,791] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:19:54,791] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:19:54,791] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:19:54,791] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:19:54,791] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:19:54,791] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:19:54,791] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 19:24:54,791] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:24:54,793] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:24:54,793] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:24:54,793] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:24:54,793] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:24:54,793] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:24:54,793] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:24:54,793] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:29:54,793] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:29:54,794] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:29:54,795] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:29:54,795] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:29:54,795] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:29:54,795] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:29:54,795] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:29:54,795] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 19:34:54,795] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:34:54,796] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:34:54,796] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:34:54,796] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:34:54,796] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:34:54,796] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:34:54,796] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:34:54,796] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:39:54,796] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:39:54,797] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:39:54,798] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:39:54,798] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:39:54,798] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:39:54,798] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:39:54,798] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:39:54,798] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:40:25,901] WARN Attempting to send response via channel for which there is no open connection, connection id 10.42.4.148:9092-10.42.5.54:56978-254423 (kafka.network.Processor)
[2022-05-01 19:40:57,525] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 19:44:54,798] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:44:54,799] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:44:54,799] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:44:54,800] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:44:54,800] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:44:54,800] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:44:54,800] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:44:54,800] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:49:54,800] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:49:54,801] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:49:54,801] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:49:54,801] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:49:54,801] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:49:54,801] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:49:54,801] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:49:54,801] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 19:54:54,802] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:54:54,803] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:54:54,803] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:54:54,803] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:54:54,803] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:54:54,803] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:54:54,803] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:54:54,803] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:59:54,803] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 19:59:54,805] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 19:59:54,805] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 19:59:54,805] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:59:54,805] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 19:59:54,805] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 19:59:54,805] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 19:59:54,805] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 20:04:54,806] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:04:54,806] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:04:54,807] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:04:54,807] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:04:54,807] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:04:54,807] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:04:54,807] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:04:54,807] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:09:54,807] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:09:54,808] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:09:54,809] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:09:54,809] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:09:54,809] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:09:54,809] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:09:54,809] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:09:54,809] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 20:14:54,809] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:14:54,810] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:14:54,811] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:14:54,811] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:14:54,811] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:14:54,811] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:14:54,811] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:14:54,811] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:19:54,811] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:19:54,812] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:19:54,813] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:19:54,813] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:19:54,813] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:19:54,813] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:19:54,813] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:19:54,813] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 20:24:54,813] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:24:54,814] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:24:54,815] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:24:54,815] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:24:54,815] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:24:54,815] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:24:54,815] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:24:54,815] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:29:54,815] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:29:54,816] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:29:54,816] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:29:54,816] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:29:54,817] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:29:54,817] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:29:54,817] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:29:54,817] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 20:34:54,817] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:34:54,818] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:34:54,818] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:34:54,818] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:34:54,819] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:34:54,819] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:34:54,819] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:34:54,819] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:39:54,819] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:39:54,820] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:39:54,820] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:39:54,820] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:39:54,820] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:39:54,820] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:39:54,820] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:39:54,820] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 20:44:54,821] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:44:54,822] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:44:54,822] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:44:54,822] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:44:54,822] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:44:54,822] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:44:54,822] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:44:54,822] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:49:54,823] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:49:54,824] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:49:54,824] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:49:54,824] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:49:54,824] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:49:54,824] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:49:54,824] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:49:54,824] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 20:54:54,825] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:54:54,826] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:54:54,826] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:54:54,826] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:54:54,826] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:54:54,826] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:54:54,826] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:54:54,826] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:59:54,827] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 20:59:54,828] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 20:59:54,828] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 20:59:54,828] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:59:54,828] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 20:59:54,828] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 20:59:54,828] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 20:59:54,828] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 21:04:54,829] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:04:54,830] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:04:54,831] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:04:54,831] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:04:54,831] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:04:54,831] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:04:54,831] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:04:54,831] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:09:54,831] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:09:54,832] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:09:54,832] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:09:54,832] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:09:54,832] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:09:54,832] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:09:54,832] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:09:54,832] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 21:14:54,833] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:14:54,834] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:14:54,834] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:14:54,834] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:14:54,834] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:14:54,834] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:14:54,834] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:14:54,834] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:19:54,834] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:19:54,835] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:19:54,835] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:19:54,835] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:19:54,835] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:19:54,836] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:19:54,836] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:19:54,836] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 21:24:54,836] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:24:54,837] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:24:54,837] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:24:54,837] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:24:54,837] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:24:54,837] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:24:54,837] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:24:54,838] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:29:54,838] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:29:54,839] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:29:54,839] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:29:54,839] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:29:54,839] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:29:54,839] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:29:54,839] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:29:54,839] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 21:34:54,839] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:34:54,841] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:34:54,842] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:34:54,842] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:34:54,842] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:34:54,842] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:34:54,842] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:34:54,842] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:39:54,842] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:39:54,843] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:39:54,843] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:39:54,843] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:39:54,843] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:39:54,843] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:39:54,843] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:39:54,843] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 21:44:54,843] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:44:54,844] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:44:54,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:44:54,845] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:44:54,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:44:54,845] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:44:54,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:44:54,845] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:49:54,845] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:49:54,846] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:49:54,846] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:49:54,846] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:49:54,846] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:49:54,847] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:49:54,847] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:49:54,847] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 21:54:54,847] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:54:54,848] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:54:54,848] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:54:54,848] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:54:54,849] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:54:54,849] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:54:54,849] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:54:54,849] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:59:54,849] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 21:59:54,850] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 21:59:54,851] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 21:59:54,851] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:59:54,851] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 21:59:54,851] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 21:59:54,851] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 21:59:54,851] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 22:04:54,852] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:04:54,853] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:04:54,853] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:04:54,853] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:04:54,853] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:04:54,853] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:04:54,853] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:04:54,853] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:09:54,853] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:09:54,854] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:09:54,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:09:54,854] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:09:54,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:09:54,854] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:09:54,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:09:54,854] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 22:14:54,855] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:14:54,856] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:14:54,856] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:14:54,856] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:14:54,856] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:14:54,856] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:14:54,856] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:14:54,856] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:19:54,856] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:19:54,858] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:19:54,858] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:19:54,858] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:19:54,858] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:19:54,858] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:19:54,858] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:19:54,858] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 22:24:54,858] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:24:54,860] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:24:54,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:24:54,860] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:24:54,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:24:54,860] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:24:54,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:24:54,860] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:29:54,860] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:29:54,861] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:29:54,861] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:29:54,861] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:29:54,861] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:29:54,861] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:29:54,861] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:29:54,861] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 22:34:54,861] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:34:54,863] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:34:54,863] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:34:54,863] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:34:54,863] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:34:54,863] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:34:54,863] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:34:54,863] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:39:54,863] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:39:54,865] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:39:54,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:39:54,865] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:39:54,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:39:54,865] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:39:54,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:39:54,865] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 22:44:54,865] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:44:54,867] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:44:54,867] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:44:54,867] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:44:54,867] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:44:54,867] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:44:54,867] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:44:54,867] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:49:54,867] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:49:54,868] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:49:54,869] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:49:54,869] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:49:54,869] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:49:54,869] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:49:54,869] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:49:54,869] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 22:54:54,869] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:54:54,871] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:54:54,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:54:54,871] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:54:54,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:54:54,871] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:54:54,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:54:54,871] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:59:54,871] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 22:59:54,872] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 22:59:54,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 22:59:54,872] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:59:54,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 22:59:54,872] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 22:59:54,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 22:59:54,872] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 23:04:54,873] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:04:54,875] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:04:54,875] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:04:54,875] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:04:54,875] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:04:54,875] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:04:54,875] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:04:54,875] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:09:54,875] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:09:54,876] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:09:54,877] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:09:54,877] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:09:54,877] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:09:54,877] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:09:54,877] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:09:54,877] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 23:14:54,877] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:14:54,878] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:14:54,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:14:54,879] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:14:54,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:14:54,879] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:14:54,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:14:54,879] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:19:54,879] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:19:54,880] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:19:54,880] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:19:54,880] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:19:54,880] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:19:54,880] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:19:54,880] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:19:54,880] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 23:24:54,881] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:24:54,882] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:24:54,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:24:54,882] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:24:54,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:24:54,882] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:24:54,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:24:54,883] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:29:54,883] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:29:54,884] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:29:54,884] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:29:54,884] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:29:54,884] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:29:54,884] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:29:54,884] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:29:54,884] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 23:34:54,885] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:34:54,886] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:34:54,886] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:34:54,886] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:34:54,886] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:34:54,886] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:34:54,886] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:34:54,886] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:39:54,887] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:39:54,887] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:39:54,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:39:54,888] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:39:54,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:39:54,888] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:39:54,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:39:54,888] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 23:44:54,888] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:44:54,889] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:44:54,889] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:44:54,890] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:44:54,890] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:44:54,890] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:44:54,890] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:44:54,890] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:49:54,890] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:49:54,891] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:49:54,891] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:49:54,891] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:49:54,891] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:49:54,891] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:49:54,891] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:49:54,891] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-01 23:54:54,892] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:54:54,893] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:54:54,893] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:54:54,893] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:54:54,893] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:54:54,893] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:54:54,893] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:54:54,893] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:59:54,894] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 23:59:54,895] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-01 23:59:54,895] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-01 23:59:54,895] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:59:54,895] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-01 23:59:54,895] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 23:59:54,895] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-01 23:59:54,895] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 00:04:54,896] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:04:54,897] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:04:54,897] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:04:54,897] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:04:54,898] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:04:54,898] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:04:54,898] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:04:54,898] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:09:54,898] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:09:54,899] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:09:54,899] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:09:54,899] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:09:54,899] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:09:54,899] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:09:54,899] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:09:54,899] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 00:14:54,900] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:14:54,901] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:14:54,901] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:14:54,901] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:14:54,901] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:14:54,901] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:14:54,901] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:14:54,901] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:19:54,902] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:19:54,903] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:19:54,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:19:54,903] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:19:54,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:19:54,903] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:19:54,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:19:54,903] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 00:24:54,904] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:24:54,905] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:24:54,905] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:24:54,905] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:24:54,905] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:24:54,905] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:24:54,905] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:24:54,905] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:29:54,905] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:29:54,907] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:29:54,907] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:29:54,907] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:29:54,907] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:29:54,907] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:29:54,907] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:29:54,907] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 00:34:54,908] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:34:54,909] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:34:54,909] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:34:54,909] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:34:54,909] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:34:54,909] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:34:54,909] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:34:54,909] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:39:54,909] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:39:55,115] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:39:55,115] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:39:55,115] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:39:55,116] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:39:55,116] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:39:55,116] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:39:55,116] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 00:44:55,116] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:44:55,118] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:44:55,118] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:44:55,118] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:44:55,118] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:44:55,118] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:44:55,118] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:44:55,118] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:49:55,119] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:49:55,120] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:49:55,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:49:55,120] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:49:55,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:49:55,120] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:49:55,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:49:55,120] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 00:54:55,120] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:54:55,122] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:54:55,122] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:54:55,122] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:54:55,122] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:54:55,122] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:54:55,122] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:54:55,122] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:59:55,122] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:59:55,124] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 00:59:55,124] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 00:59:55,124] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:59:55,124] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 00:59:55,124] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:59:55,124] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 00:59:55,124] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 01:04:55,125] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:04:55,126] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:04:55,126] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:04:55,126] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:04:55,126] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:04:55,126] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:04:55,126] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:04:55,126] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:09:55,126] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:09:55,128] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:09:55,128] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:09:55,128] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:09:55,128] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:09:55,128] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:09:55,128] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:09:55,128] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 01:14:55,128] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:14:55,130] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:14:55,130] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:14:55,130] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:14:55,130] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:14:55,130] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:14:55,130] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:14:55,130] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:19:55,130] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:19:55,132] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:19:55,132] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:19:55,132] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:19:55,132] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:19:55,132] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:19:55,132] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:19:55,132] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 01:24:55,132] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:24:55,134] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:24:55,134] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:24:55,134] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:24:55,134] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:24:55,134] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:24:55,134] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:24:55,134] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:29:55,134] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:29:55,135] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:29:55,136] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:29:55,136] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:29:55,136] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:29:55,136] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:29:55,136] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:29:55,136] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 01:34:55,136] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:34:55,137] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:34:55,138] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:34:55,138] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:34:55,138] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:34:55,138] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:34:55,138] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:34:55,138] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:39:55,138] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:39:55,139] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:39:55,139] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:39:55,139] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:39:55,139] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:39:55,140] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:39:55,140] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:39:55,140] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 01:44:55,140] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:44:55,141] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:44:55,142] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:44:55,142] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:44:55,142] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:44:55,142] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:44:55,142] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:44:55,142] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:49:55,142] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:49:55,142] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:49:55,143] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:49:55,143] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:49:55,143] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:49:55,143] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:49:55,143] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:49:55,143] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 01:54:55,143] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:54:55,144] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:54:55,144] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:54:55,144] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:54:55,144] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:54:55,144] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:54:55,144] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:54:55,144] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:59:55,145] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 01:59:55,146] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 01:59:55,146] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 01:59:55,146] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:59:55,146] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 01:59:55,146] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 01:59:55,146] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 01:59:55,146] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 02:04:55,147] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:04:55,148] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:04:55,149] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:04:55,149] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:04:55,149] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:04:55,149] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:04:55,149] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:04:55,149] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:09:55,149] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:09:55,150] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:09:55,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:09:55,151] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:09:55,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:09:55,151] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:09:55,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:09:55,151] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 02:14:55,151] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:14:55,153] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:14:55,153] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:14:55,153] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:14:55,153] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:14:55,153] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:14:55,153] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:14:55,153] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:19:55,153] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:19:55,154] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:19:55,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:19:55,155] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:19:55,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:19:55,155] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:19:55,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:19:55,155] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 02:24:55,155] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:24:55,156] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:24:55,157] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:24:55,157] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:24:55,157] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:24:55,157] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:24:55,157] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:24:55,157] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:29:55,157] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:29:55,158] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:29:55,159] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:29:55,159] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:29:55,159] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:29:55,159] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:29:55,159] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:29:55,159] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 02:34:55,159] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:34:55,160] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:34:55,161] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:34:55,161] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:34:55,161] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:34:55,161] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:34:55,161] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:34:55,161] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:39:55,161] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:39:55,162] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:39:55,163] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:39:55,163] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:39:55,163] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:39:55,163] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:39:55,163] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:39:55,163] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 02:44:55,163] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:44:55,164] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:44:55,164] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:44:55,164] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:44:55,164] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:44:55,164] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:44:55,164] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:44:55,164] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:49:55,164] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:49:55,166] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:49:55,166] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:49:55,166] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:49:55,166] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:49:55,166] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:49:55,166] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:49:55,166] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 02:54:55,166] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:54:55,167] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:54:55,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:54:55,167] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:54:55,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:54:55,167] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:54:55,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:54:55,167] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:59:55,167] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 02:59:55,169] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 02:59:55,169] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 02:59:55,169] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:59:55,169] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 02:59:55,169] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 02:59:55,169] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 02:59:55,169] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 03:04:55,170] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:04:55,171] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:04:55,171] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:04:55,171] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:04:55,171] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:04:55,171] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:04:55,172] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:04:55,172] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:09:55,172] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:09:55,173] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:09:55,173] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:09:55,173] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:09:55,173] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:09:55,173] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:09:55,173] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:09:55,173] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 03:14:55,173] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:14:55,175] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:14:55,175] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:14:55,175] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:14:55,175] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:14:55,175] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:14:55,175] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:14:55,175] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:19:55,175] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:19:55,176] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:19:55,176] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:19:55,176] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:19:55,176] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:19:55,176] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:19:55,176] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:19:55,176] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 03:24:55,176] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:24:55,178] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:24:55,178] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:24:55,178] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:24:55,178] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:24:55,178] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:24:55,178] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:24:55,178] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:29:55,178] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:29:55,179] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:29:55,180] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:29:55,180] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:29:55,180] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:29:55,180] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:29:55,180] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:29:55,180] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 03:34:55,180] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:34:55,181] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:34:55,181] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:34:55,181] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:34:55,181] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:34:55,181] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:34:55,181] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:34:55,181] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:39:55,182] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:39:55,183] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:39:55,183] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:39:55,183] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:39:55,183] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:39:55,183] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:39:55,183] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:39:55,183] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 03:44:55,183] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:44:55,184] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:44:55,184] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:44:55,184] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:44:55,184] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:44:55,184] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:44:55,184] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:44:55,184] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:49:55,184] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:49:55,185] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:49:55,185] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:49:55,185] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:49:55,185] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:49:55,186] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:49:55,186] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:49:55,186] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 03:54:55,186] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:54:55,188] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:54:55,188] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:54:55,188] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:54:55,188] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:54:55,188] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:54:55,188] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:54:55,188] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:59:55,188] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 03:59:55,189] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 03:59:55,189] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 03:59:55,189] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:59:55,189] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 03:59:55,189] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 03:59:55,189] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 03:59:55,189] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 04:04:55,190] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:04:55,191] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:04:55,191] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:04:55,191] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:04:55,191] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:04:55,191] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:04:55,191] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:04:55,191] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:09:55,192] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:09:55,192] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:09:55,193] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:09:55,193] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:09:55,193] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:09:55,193] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:09:55,193] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:09:55,193] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 04:14:55,193] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:14:55,194] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:14:55,194] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:14:55,194] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:14:55,194] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:14:55,194] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:14:55,195] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:14:55,195] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:16:14,506] INFO [ProducerStateManager partition=egov-infra-logs-2] Writing producer snapshot at offset 44507169 (kafka.log.ProducerStateManager)
[2022-05-02 04:16:14,507] INFO [Log partition=egov-infra-logs-2, dir=/opt/kafka-data/logs] Rolled new log segment at offset 44507169 in 2 ms. (kafka.log.Log)
[2022-05-02 04:19:55,195] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:19:55,196] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:19:55,196] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:19:55,196] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:19:55,196] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:19:55,196] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:19:55,196] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:19:55,196] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 04:24:55,196] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:24:55,197] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:24:55,198] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:24:55,198] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:24:55,198] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:24:55,198] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:24:55,198] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:24:55,198] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:29:55,198] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:29:55,200] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:29:55,200] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:29:55,200] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:29:55,200] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:29:55,200] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:29:55,200] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:29:55,200] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:30:22,484] INFO [ProducerStateManager partition=egov-infra-logs-0] Writing producer snapshot at offset 44506796 (kafka.log.ProducerStateManager)
[2022-05-02 04:30:22,504] INFO [Log partition=egov-infra-logs-0, dir=/opt/kafka-data/logs] Rolled new log segment at offset 44506796 in 20 ms. (kafka.log.Log)
[2022-05-02 04:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 04:34:55,200] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:34:55,202] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:34:55,202] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:34:55,202] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:34:55,202] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:34:55,202] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:34:55,202] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:34:55,202] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:39:55,202] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:39:55,204] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:39:55,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:39:55,204] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:39:55,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:39:55,204] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:39:55,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:39:55,204] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 04:44:55,204] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:44:55,206] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:44:55,206] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:44:55,206] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:44:55,206] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:44:55,206] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:44:55,206] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:44:55,206] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:49:55,206] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:49:55,208] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:49:55,208] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:49:55,208] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:49:55,208] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:49:55,208] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:49:55,208] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:49:55,208] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 04:54:55,208] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:54:55,209] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:54:55,209] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:54:55,209] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:54:55,209] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:54:55,209] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:54:55,209] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:54:55,209] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:59:55,209] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 04:59:55,211] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 04:59:55,211] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 04:59:55,211] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:59:55,211] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 04:59:55,211] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 04:59:55,211] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 04:59:55,211] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 05:04:55,212] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:04:55,213] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:04:55,213] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:04:55,213] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:04:55,213] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:04:55,213] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:04:55,213] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:04:55,213] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:09:55,213] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:09:55,215] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:09:55,215] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:09:55,215] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:09:55,215] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:09:55,215] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:09:55,215] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:09:55,215] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 05:14:55,215] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:14:55,217] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:14:55,217] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:14:55,217] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:14:55,217] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:14:55,217] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:14:55,217] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:14:55,217] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:19:55,217] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:19:55,219] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:19:55,219] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:19:55,219] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:19:55,219] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:19:55,219] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:19:55,219] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:19:55,219] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 05:24:55,221] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:24:55,222] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:24:55,222] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:24:55,222] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:24:55,222] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:24:55,222] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:24:55,222] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:24:55,222] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:29:55,222] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:29:55,223] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:29:55,223] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:29:55,223] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:29:55,223] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:29:55,223] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:29:55,223] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:29:55,223] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 05:34:55,224] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:34:55,224] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:34:55,224] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:34:55,224] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:34:55,224] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:34:55,224] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:34:55,224] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:34:55,224] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:39:55,225] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:39:55,226] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:39:55,227] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:39:55,227] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:39:55,227] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:39:55,227] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:39:55,227] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:39:55,227] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 05:44:55,227] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:44:55,228] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:44:55,228] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:44:55,228] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:44:55,228] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:44:55,228] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:44:55,228] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:44:55,228] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:49:55,228] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:49:55,229] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:49:55,229] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:49:55,229] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:49:55,229] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:49:55,229] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:49:55,229] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:49:55,229] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 05:54:55,229] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:54:55,230] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:54:55,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:54:55,230] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:54:55,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:54:55,230] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:54:55,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:54:55,230] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:59:55,230] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 05:59:55,231] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 05:59:55,231] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 05:59:55,231] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:59:55,231] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 05:59:55,231] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 05:59:55,231] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 05:59:55,231] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 06:04:55,232] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:04:55,233] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:04:55,233] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:04:55,233] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:04:55,233] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:04:55,233] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:04:55,233] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:04:55,233] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:09:55,237] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:09:55,238] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:09:55,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:09:55,238] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:09:55,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:09:55,239] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:09:55,239] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:09:55,239] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 06:14:55,239] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:14:55,240] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:14:55,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:14:55,240] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:14:55,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:14:55,240] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:14:55,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:14:55,240] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:19:55,240] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:19:55,241] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:19:55,241] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:19:55,242] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:19:55,242] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:19:55,242] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:19:55,242] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:19:55,242] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 06:24:55,242] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:24:55,243] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:24:55,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:24:55,243] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:24:55,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:24:55,243] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:24:55,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:24:55,243] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:29:55,244] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:29:55,245] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:29:55,245] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:29:55,245] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:29:55,245] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:29:55,245] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:29:55,245] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:29:55,245] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 06:34:55,245] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:34:55,247] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:34:55,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:34:55,247] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:34:55,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:34:55,247] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:34:55,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:34:55,247] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:39:55,247] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:39:55,248] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:39:55,248] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:39:55,248] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:39:55,248] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:39:55,248] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:39:55,248] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:39:55,248] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 06:44:55,248] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:44:55,250] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:44:55,250] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:44:55,250] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:44:55,250] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:44:55,250] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:44:55,250] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:44:55,250] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:49:55,251] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:49:55,252] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:49:55,252] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:49:55,252] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:49:55,252] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:49:55,252] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:49:55,252] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:49:55,252] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 06:54:55,253] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:54:55,254] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:54:55,254] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:54:55,254] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:54:55,254] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:54:55,254] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:54:55,254] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:54:55,254] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:59:55,255] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 06:59:55,256] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 06:59:55,256] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 06:59:55,256] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:59:55,256] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 06:59:55,257] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 06:59:55,257] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 06:59:55,257] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:00:57,616] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 07:04:55,257] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:04:55,259] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:04:55,259] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:04:55,259] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:04:55,259] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:04:55,259] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:04:55,259] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:04:55,259] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:09:55,259] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:09:55,260] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:09:55,260] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:09:55,260] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:09:55,260] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:09:55,260] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:09:55,260] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:09:55,260] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 07:14:55,261] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:14:55,262] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:14:55,262] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:14:55,262] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:14:55,262] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:14:55,262] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:14:55,262] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:14:55,262] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:19:55,262] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:19:55,263] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:19:55,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:19:55,263] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:19:55,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:19:55,263] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:19:55,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:19:55,263] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 07:24:55,264] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:24:55,265] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:24:55,265] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:24:55,265] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:24:55,265] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:24:55,265] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:24:55,265] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:24:55,265] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:29:55,266] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:29:55,266] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:29:55,266] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:29:55,266] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:29:55,266] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:29:55,266] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:29:55,266] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:29:55,266] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 07:34:55,267] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:34:55,268] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:34:55,268] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:34:55,268] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:34:55,268] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:34:55,268] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:34:55,268] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:34:55,268] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:39:55,268] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:39:55,269] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:39:55,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:39:55,269] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:39:55,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:39:55,269] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:39:55,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:39:55,269] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 07:44:55,270] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:44:55,270] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:44:55,270] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:44:55,270] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:44:55,270] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:44:55,270] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:44:55,270] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:44:55,270] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:49:55,271] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:49:55,271] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:49:55,271] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:49:55,271] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:49:55,271] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:49:55,271] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:49:55,271] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:49:55,272] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 07:54:55,272] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:54:55,272] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:54:55,272] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:54:55,272] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:54:55,272] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:54:55,272] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:54:55,272] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:54:55,272] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:59:55,273] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 07:59:55,274] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 07:59:55,274] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 07:59:55,274] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:59:55,274] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 07:59:55,274] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 07:59:55,274] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 07:59:55,274] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 08:04:55,274] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:04:55,275] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:04:55,275] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:04:55,275] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:04:55,275] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:04:55,275] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:04:55,275] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:04:55,275] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:09:55,275] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:09:55,276] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:09:55,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:09:55,276] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:09:55,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:09:55,276] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:09:55,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:09:55,276] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 08:14:55,276] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:14:55,278] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:14:55,278] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:14:55,278] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:14:55,278] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:14:55,278] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:14:55,278] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:14:55,278] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:19:55,278] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:19:55,279] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:19:55,279] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:19:55,279] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:19:55,279] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:19:55,279] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:19:55,279] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:19:55,279] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 08:24:55,280] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:24:55,281] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:24:55,281] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:24:55,281] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:24:55,281] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:24:55,281] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:24:55,281] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:24:55,281] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:29:55,282] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:29:55,282] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:29:55,282] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:29:55,282] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:29:55,283] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:29:55,283] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:29:55,283] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:29:55,283] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 08:34:55,283] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:34:55,284] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:34:55,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:34:55,284] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:34:55,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:34:55,284] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:34:55,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:34:55,284] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:39:55,284] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:39:55,285] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:39:55,286] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:39:55,286] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:39:55,286] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:39:55,286] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:39:55,286] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:39:55,286] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 08:44:55,286] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:44:55,287] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:44:55,288] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:44:55,288] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:44:55,288] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:44:55,288] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:44:55,288] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:44:55,288] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:49:55,288] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:49:55,290] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:49:55,290] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:49:55,290] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:49:55,290] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:49:55,290] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:49:55,290] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:49:55,290] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 08:54:55,290] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:54:55,291] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:54:55,291] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:54:55,291] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:54:55,291] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:54:55,291] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:54:55,291] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:54:55,291] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:59:55,291] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 08:59:55,293] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 08:59:55,293] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 08:59:55,293] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:59:55,293] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 08:59:55,293] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 08:59:55,293] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 08:59:55,293] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 09:04:55,294] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:04:55,294] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:04:55,295] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:04:55,295] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:04:55,295] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:04:55,295] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:04:55,295] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:04:55,295] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:09:55,295] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:09:55,296] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:09:55,296] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:09:55,296] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:09:55,296] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:09:55,296] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:09:55,296] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:09:55,297] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 09:14:55,297] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:14:55,298] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:14:55,298] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:14:55,298] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:14:55,298] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:14:55,298] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:14:55,298] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:14:55,298] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:19:55,298] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:19:55,299] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:19:55,299] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:19:55,299] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:19:55,299] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:19:55,299] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:19:55,299] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:19:55,299] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 09:24:55,299] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:24:55,300] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:24:55,300] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:24:55,300] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:24:55,300] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:24:55,300] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:24:55,300] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:24:55,300] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:29:55,300] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:29:55,301] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:29:55,301] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:29:55,301] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:29:55,301] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:29:55,301] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:29:55,301] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:29:55,301] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 09:34:55,302] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:34:55,303] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:34:55,303] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:34:55,303] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:34:55,303] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:34:55,303] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:34:55,303] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:34:55,303] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:39:55,304] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:39:55,305] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:39:55,305] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:39:55,305] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:39:55,305] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:39:55,305] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:39:55,305] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:39:55,305] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 09:44:55,306] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:44:55,307] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:44:55,307] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:44:55,307] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:44:55,307] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:44:55,307] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:44:55,307] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:44:55,307] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:49:55,307] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:49:55,308] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:49:55,308] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:49:55,308] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:49:55,308] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:49:55,308] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:49:55,308] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:49:55,308] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 09:54:55,308] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:54:55,309] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:54:55,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:54:55,309] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:54:55,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:54:55,309] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:54:55,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:54:55,309] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:59:55,309] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 09:59:55,310] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 09:59:55,310] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 09:59:55,310] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:59:55,310] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 09:59:55,310] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 09:59:55,310] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 09:59:55,310] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 10:04:55,311] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:04:55,313] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:04:55,313] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:04:55,313] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:04:55,313] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:04:55,313] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:04:55,313] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:04:55,313] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:09:55,314] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:09:55,315] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:09:55,315] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:09:55,315] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:09:55,315] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:09:55,315] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:09:55,315] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:09:55,315] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 10:14:55,315] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:14:55,316] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:14:55,316] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:14:55,316] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:14:55,316] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:14:55,316] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:14:55,316] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:14:55,316] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:19:55,316] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:19:55,318] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:19:55,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:19:55,318] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:19:55,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:19:55,318] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:19:55,318] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:19:55,318] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 10:24:55,318] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:24:55,320] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:24:55,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:24:55,320] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:24:55,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:24:55,320] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:24:55,320] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:24:55,320] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:29:55,321] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:29:55,322] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:29:55,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:29:55,322] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:29:55,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:29:55,322] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:29:55,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:29:55,322] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 10:34:55,322] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:34:55,324] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:34:55,324] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:34:55,324] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:34:55,324] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:34:55,324] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:34:55,324] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:34:55,324] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:39:55,328] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:39:55,328] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:39:55,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:39:55,328] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:39:55,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:39:55,328] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:39:55,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:39:55,328] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 10:44:55,329] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:44:55,330] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:44:55,330] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:44:55,330] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:44:55,330] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:44:55,330] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:44:55,330] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:44:55,330] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:49:55,332] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:49:55,333] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:49:55,333] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:49:55,333] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:49:55,333] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:49:55,333] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:49:55,333] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:49:55,333] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 10:54:55,334] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:54:55,335] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:54:55,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:54:55,335] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:54:55,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:54:55,335] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:54:55,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:54:55,335] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:59:55,335] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 10:59:55,337] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 10:59:55,337] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 10:59:55,337] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:59:55,337] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 10:59:55,337] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 10:59:55,337] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 10:59:55,337] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 11:04:55,338] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:04:55,339] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:04:55,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:04:55,339] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:04:55,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:04:55,339] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:04:55,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:04:55,339] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:09:55,339] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:09:55,340] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:09:55,340] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:09:55,340] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:09:55,340] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:09:55,340] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:09:55,340] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:09:55,340] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 11:14:55,340] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:14:55,341] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:14:55,341] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:14:55,341] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:14:55,341] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:14:55,341] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:14:55,341] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:14:55,341] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:19:55,341] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:19:55,342] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:19:55,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:19:55,342] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:19:55,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:19:55,342] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:19:55,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:19:55,342] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 11:24:55,342] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:24:55,343] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:24:55,343] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:24:55,343] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:24:55,343] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:24:55,343] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:24:55,343] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:24:55,343] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:29:55,343] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:29:55,345] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:29:55,345] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:29:55,345] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:29:55,345] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:29:55,345] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:29:55,345] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:29:55,345] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 11:34:55,345] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:34:55,347] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:34:55,347] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:34:55,347] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:34:55,347] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:34:55,347] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:34:55,347] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:34:55,347] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:39:55,347] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:39:55,348] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:39:55,348] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:39:55,348] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:39:55,348] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:39:55,348] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:39:55,348] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:39:55,348] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:40:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 11:44:55,348] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:44:55,349] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:44:55,349] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:44:55,349] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:44:55,349] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:44:55,349] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:44:55,349] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:44:55,349] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:49:55,350] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:49:55,351] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:49:55,351] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:49:55,351] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:49:55,351] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:49:55,351] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:49:55,351] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:49:55,351] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:50:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 11:54:55,351] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:54:55,353] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:54:55,353] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:54:55,353] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:54:55,353] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:54:55,353] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:54:55,353] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:54:55,353] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:59:55,353] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:59:55,354] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 11:59:55,354] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 11:59:55,354] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:59:55,354] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 11:59:55,354] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:59:55,354] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 11:59:55,354] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:00:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 12:04:55,355] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 12:04:55,355] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 12:04:55,355] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 12:04:55,355] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:04:55,355] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 12:04:55,355] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:04:55,355] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 12:04:55,355] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:09:55,356] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 12:09:55,357] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 12:09:55,357] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 12:09:55,357] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:09:55,357] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 12:09:55,357] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:09:55,357] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 12:09:55,357] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:10:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 12:14:55,357] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 12:14:55,358] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 12:14:55,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 12:14:55,359] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:14:55,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 12:14:55,359] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:14:55,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 12:14:55,359] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:19:55,359] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 12:19:55,360] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 12:19:55,360] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 12:19:55,360] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:19:55,360] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 12:19:55,361] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:19:55,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 12:19:55,361] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:20:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 12:24:55,361] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 12:24:55,416] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 12:24:55,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 12:24:55,416] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:24:55,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 12:24:55,416] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:24:55,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 12:24:55,417] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:29:55,417] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 12:29:55,418] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 12:29:55,418] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 12:29:55,418] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:29:55,418] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 12:29:55,419] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:29:55,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 12:29:55,419] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:30:57,524] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2022-05-02 12:34:55,419] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 12:34:55,420] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 0), kafka-connect-infra-offset-19 -> Vector(2, 0, 1), kafka-connect-infra-offset-7 -> Vector(2, 0, 1), res-custom-filter-1 -> Vector(2, 1), egov-services-logs-to-es-failed-0 -> Vector(2, 1, 0), __consumer_offsets-4 -> Vector(2, 1, 0), __consumer_offsets-7 -> Vector(2, 0, 1), __consumer_offsets-46 -> Vector(2, 1, 0), __consumer_offsets-25 -> Vector(2, 0, 1), egov-infra-logs-1 -> Vector(2, 0), __consumer_offsets-49 -> Vector(2, 0, 1), __consumer_offsets-16 -> Vector(2, 1, 0), __consumer_offsets-28 -> Vector(2, 1, 0), __consumer_offsets-31 -> Vector(2, 0, 1), __consumer_offsets-37 -> Vector(2, 0, 1), kafka-connect-infra-offset-16 -> Vector(2, 1, 0), __consumer_offsets-19 -> Vector(2, 0, 1), __consumer_offsets-13 -> Vector(2, 0, 1), __consumer_offsets-43 -> Vector(2, 0, 1), kafka-connect-infra-offset-1 -> Vector(2, 0, 1), kafka-connect-infra-offset-13 -> Vector(2, 0, 1), kafka-connect-infra-offset-4 -> Vector(2, 1, 0), kafka-connect-infra-status-2 -> Vector(2, 1, 0), __consumer_offsets-1 -> Vector(2, 0, 1), egov-services-logs-1 -> Vector(2, 0), __consumer_offsets-34 -> Vector(2, 1, 0), __consumer_offsets-10 -> Vector(2, 1, 0), __consumer_offsets-40 -> Vector(2, 1, 0), kafka-connect-infra-offset-10 -> Vector(2, 1, 0), kafka-connect-infra-offset-22 -> Vector(2, 1, 0)), 1 -> Map(kafka-connect-infra-offset-5 -> Vector(1, 0, 2), __consumer_offsets-30 -> Vector(1, 2, 0), __consumer_offsets-21 -> Vector(1, 0, 2), egov-infra-logs-0 -> Vector(1, 2), kafka-connect-infra-status-0 -> Vector(1, 0, 2), egov-services-logs-0 -> Vector(1, 2), __consumer_offsets-27 -> Vector(1, 0, 2), __consumer_offsets-9 -> Vector(1, 0, 2), kafka-connect-infra-offset-2 -> Vector(1, 2, 0), __consumer_offsets-33 -> Vector(1, 0, 2), kafka-connect-infra-offset-11 -> Vector(1, 0, 2), kafka-connect-infra-offset-20 -> Vector(1, 2, 0), kafka-connect-infra-offset-8 -> Vector(1, 2, 0), __consumer_offsets-36 -> Vector(1, 2, 0), __consumer_offsets-42 -> Vector(1, 2, 0), __consumer_offsets-3 -> Vector(1, 0, 2), __consumer_offsets-18 -> Vector(1, 2, 0), __consumer_offsets-15 -> Vector(1, 0, 2), __consumer_offsets-24 -> Vector(1, 2, 0), kafka-connect-infra-offset-17 -> Vector(1, 0, 2), kafka-connect-infra-offset-23 -> Vector(1, 0, 2), __consumer_offsets-48 -> Vector(1, 2, 0), kafka-connect-infra-status-3 -> Vector(1, 2, 0), kafka-connect-infra-config-0 -> Vector(1, 0, 2), __consumer_offsets-6 -> Vector(1, 2, 0), res-custom-filter-0 -> Vector(1, 0), kafka-connect-infra-offset-14 -> Vector(1, 2, 0), __consumer_offsets-0 -> Vector(1, 2, 0), __consumer_offsets-39 -> Vector(1, 0, 2), __consumer_offsets-12 -> Vector(1, 2, 0), __consumer_offsets-45 -> Vector(1, 0, 2)), 0 -> Map(__consumer_offsets-8 -> Vector(0, 1, 2), kafka-connect-infra-offset-24 -> Vector(0, 1, 2), res-custom-filter-2 -> Vector(0, 2), kafka-connect-infra-status-4 -> Vector(0, 1, 2), __consumer_offsets-35 -> Vector(0, 2, 1), __consumer_offsets-41 -> Vector(0, 2, 1), kafka-connect-infra-offset-15 -> Vector(0, 2, 1), __consumer_offsets-23 -> Vector(0, 2, 1), __consumer_offsets-47 -> Vector(0, 2, 1), kafka-connect-infra-status-1 -> Vector(0, 2, 1), egov-infra-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-21 -> Vector(0, 2, 1), kafka-connect-infra-offset-6 -> Vector(0, 1, 2), kafka-connect-infra-offset-0 -> Vector(0, 1, 2), __consumer_offsets-38 -> Vector(0, 1, 2), __consumer_offsets-17 -> Vector(0, 2, 1), kafka-connect-infra-offset-12 -> Vector(0, 1, 2), __confluent.support.metrics-0 -> Vector(0), kafka-connect-infra-offset-3 -> Vector(0, 2, 1), __consumer_offsets-11 -> Vector(0, 2, 1), egov-services-logs-2 -> Vector(0, 1), kafka-connect-infra-offset-9 -> Vector(0, 2, 1), __consumer_offsets-2 -> Vector(0, 1, 2), __consumer_offsets-14 -> Vector(0, 1, 2), kafka-connect-infra-offset-18 -> Vector(0, 1, 2), __consumer_offsets-20 -> Vector(0, 1, 2), __consumer_offsets-44 -> Vector(0, 1, 2), __consumer_offsets-5 -> Vector(0, 2, 1), __consumer_offsets-26 -> Vector(0, 1, 2), __consumer_offsets-29 -> Vector(0, 2, 1), __consumer_offsets-32 -> Vector(0, 1, 2))) (kafka.controller.KafkaController)
[2022-05-02 12:34:55,420] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-02 12:34:55,420] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:34:55,420] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-02 12:34:55,421] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 12:34:55,421] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-02 12:34:55,421] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
